{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { loadingGifUrl } from 'src/constants/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"src/app/services/alert.service\";\nimport * as i3 from \"src/app/services/service-categories.service\";\nimport * as i4 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\n\nfunction NewServiceCategoryModalComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1, \"Add Service Category\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NewServiceCategoryModalComponent_img_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 12);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r1.loadingGif, i0.ɵɵsanitizeUrl);\n  }\n}\n\nexport let NewServiceCategoryModalComponent = /*#__PURE__*/(() => {\n  class NewServiceCategoryModalComponent {\n    constructor(authService, alertService, serviceCategoriesService, activeModal) {\n      this.authService = authService;\n      this.alertService = alertService;\n      this.serviceCategoriesService = serviceCategoriesService;\n      this.activeModal = activeModal;\n      this.category = {\n        name: null,\n        isActive: true\n      };\n      this.isStoreLoading = false;\n      this.loadingGif = loadingGifUrl;\n      this.currentEmployee = authService.currentEmployee;\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {});\n    }\n\n    store() {\n      this.isStoreLoading = true;\n\n      if (!this.category.name) {\n        this.alertService.toastError('Service category name should not be empty');\n        this.isStoreLoading = false;\n        return;\n      }\n\n      this.serviceCategoriesService.store(this.category).subscribe({\n        next: data => {\n          console.log(data);\n          this.alertService.toastSuccess('Service Category Added Successfully');\n          this.isStoreLoading = false;\n          this.activeModal.close(true);\n        },\n        error: error => {\n          console.log(error);\n          this.authService.handleHttpError(error);\n          this.isStoreLoading = false;\n        }\n      });\n    }\n\n  }\n\n  NewServiceCategoryModalComponent.ɵfac = function NewServiceCategoryModalComponent_Factory(t) {\n    return new (t || NewServiceCategoryModalComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.AlertService), i0.ɵɵdirectiveInject(i3.ServiceCategoriesService), i0.ɵɵdirectiveInject(i4.NgbActiveModal));\n  };\n\n  NewServiceCategoryModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewServiceCategoryModalComponent,\n    selectors: [[\"app-new-service-category-modal\"]],\n    decls: 17,\n    vars: 5,\n    consts: [[1, \"card\", \"card-signin\", \"my-5\", 2, \"border\", \"0\", \"margin\", \"0!important\"], [1, \"card-body\"], [\"translate\", \"\", 1, \"card-title\", \"text-center\"], [1, \"form-signin\", 3, \"ngSubmit\"], [1, \"form-label-group\", \"m-4\"], [\"type\", \"text\", \"name\", \"name\", \"id\", \"name\", \"placeholder\", \"Name\", \"required\", \"\", \"autofocus\", \"\", 1, \"form-control\", \"common-input\", \"px-3\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"isActive\"], [\"type\", \"checkbox\", \"name\", \"isActive\", \"id\", \"isActive\", \"required\", \"\", \"autofocus\", \"\", 1, \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-lg\", \"btn-primary\", \"btn-block\", \"form-control\", \"text-uppercase\", 3, \"disabled\"], [\"translate\", \"\", 4, \"ngIf\"], [\"width\", \"20px\", 3, \"src\", 4, \"ngIf\"], [\"translate\", \"\"], [\"width\", \"20px\", 3, \"src\"]],\n    template: function NewServiceCategoryModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n        i0.ɵɵtext(3, \"Add a new Service Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function NewServiceCategoryModalComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.store();\n        });\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\");\n        i0.ɵɵtext(7, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function NewServiceCategoryModalComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.category.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Is Active:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function NewServiceCategoryModalComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.category.isActive = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 4)(14, \"button\", 8);\n        i0.ɵɵtemplate(15, NewServiceCategoryModalComponent_span_15_Template, 2, 0, \"span\", 9);\n        i0.ɵɵtemplate(16, NewServiceCategoryModalComponent_img_16_Template, 1, 1, \"img\", 10);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.category.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.category.isActive);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.isStoreLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isStoreLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isStoreLoading);\n      }\n    },\n    dependencies: [i5.NgIf, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.CheckboxControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.CheckboxRequiredValidator, i6.NgModel, i6.NgForm]\n  });\n  return NewServiceCategoryModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}