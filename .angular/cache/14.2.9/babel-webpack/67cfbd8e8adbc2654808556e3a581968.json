{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Currency } from 'src/common/enums/currency.enum';\nimport { loadingGifUrl } from 'src/constants/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"src/app/services/alert.service\";\nimport * as i3 from \"src/app/services/service-types.service\";\nimport * as i4 from \"@ng-bootstrap/ng-bootstrap\";\nexport let NewServiceTypeModalComponent = /*#__PURE__*/(() => {\n  class NewServiceTypeModalComponent {\n    constructor(authService, alertService, serviceTypeService, activeModal) {\n      this.authService = authService;\n      this.alertService = alertService;\n      this.serviceTypeService = serviceTypeService;\n      this.activeModal = activeModal;\n      this.type = {\n        name: null,\n        categoryId: null,\n        price: 0,\n        isActive: true,\n        currency: Currency.USD,\n        isMotoAllowed: false,\n        showQuantityInput: true,\n        showVehicleSelection: false,\n        icon: null\n      };\n      this.isStoreLoading = false;\n      this.loadingGif = loadingGifUrl;\n      this.currentEmployee = authService.currentEmployee;\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {});\n    }\n\n    uploadImage(event) {\n      this.file = event.target.files[0];\n      console.log(this.file);\n    }\n\n    store() {\n      this.isStoreLoading = true;\n\n      if (!this.type.name) {\n        this.alertService.toastError('Service type name should not be empty');\n        this.isStoreLoading = false;\n        return;\n      }\n\n      if (!this.type.categoryId) {\n        this.alertService.toastError('Service type category name should be selected');\n        this.isStoreLoading = false;\n        return;\n      }\n\n      if (!this.type.price) {\n        this.alertService.toastError('Service type price should not be empty!');\n        this.isStoreLoading = false;\n        return;\n      }\n\n      if (!this.file) {\n        this.alertService.toastError('Service category icon should not be empty');\n        this.isStoreLoading = false;\n        return;\n      }\n\n      let data = new FormData();\n      data.append('name', this.type.name);\n      data.append('categoryId', this.type.categoryId);\n      data.append('currency', this.type.currency);\n      data.append('isMotoAllowed', this.type.isMotoAllowed + '');\n      data.append('price', this.type.price + '');\n      data.append('showQuantityInput', this.type.showQuantityInput + '');\n      data.append('showVehicleSelection', this.type.showVehicleSelection + '');\n      data.append('isActive', this.type.isActive + '');\n      data.append('icon', this.file, this.file.name);\n      this.serviceTypeService.store(data).subscribe({\n        next: data => {\n          console.log(data);\n          this.alertService.toastSuccess('Service Type Added Successfully');\n          this.isStoreLoading = false;\n          this.activeModal.close(true);\n        },\n        error: error => {\n          console.log(error);\n          this.authService.handleHttpError(error);\n          this.isStoreLoading = false;\n        }\n      });\n    }\n\n  }\n\n  NewServiceTypeModalComponent.ɵfac = function NewServiceTypeModalComponent_Factory(t) {\n    return new (t || NewServiceTypeModalComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.AlertService), i0.ɵɵdirectiveInject(i3.ServiceTypesService), i0.ɵɵdirectiveInject(i4.NgbActiveModal));\n  };\n\n  NewServiceTypeModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewServiceTypeModalComponent,\n    selectors: [[\"app-new-service-type-modal\"]],\n    decls: 2,\n    vars: 0,\n    template: function NewServiceTypeModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"new-service-type-modal works!\");\n        i0.ɵɵelementEnd();\n      }\n    }\n  });\n  return NewServiceTypeModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}