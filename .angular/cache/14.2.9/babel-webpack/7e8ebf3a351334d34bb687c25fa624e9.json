{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Currency } from 'src/common/enums/currency.enum';\nimport { loadingGifUrl } from 'src/constants/constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"src/app/services/alert.service\";\nimport * as i3 from \"src/app/services/service-types.service\";\nimport * as i4 from \"src/app/services/service-categories.service\";\nimport * as i5 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\n\nfunction NewServiceTypeModalComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const category_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r4.name);\n  }\n}\n\nfunction NewServiceTypeModalComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"label\", 21);\n    i0.ɵɵtext(2, \"Is Moto Allowed? \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function NewServiceTypeModalComponent_div_26_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.type.isMotoAllowed = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.type.isMotoAllowed);\n  }\n}\n\nfunction NewServiceTypeModalComponent_span_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \"Add Service Category\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NewServiceTypeModalComponent_img_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 24);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r3.loadingGif, i0.ɵɵsanitizeUrl);\n  }\n}\n\nexport let NewServiceTypeModalComponent = /*#__PURE__*/(() => {\n  class NewServiceTypeModalComponent {\n    constructor(authService, alertService, serviceTypeService, serviceCategoriesService, activeModal) {\n      this.authService = authService;\n      this.alertService = alertService;\n      this.serviceTypeService = serviceTypeService;\n      this.serviceCategoriesService = serviceCategoriesService;\n      this.activeModal = activeModal;\n      this.type = {\n        name: null,\n        categoryId: null,\n        price: 0,\n        isActive: true,\n        currency: Currency.USD,\n        isMotoAllowed: false,\n        showQuantityInput: true,\n        showVehicleSelection: false,\n        icon: null\n      };\n      this.serviceCategories = [];\n      this.isStoreLoading = false;\n      this.loadingGif = loadingGifUrl;\n      this.currentEmployee = authService.currentEmployee;\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          let res = yield this.serviceCategoriesService.getAll(99, 0);\n          this.serviceCategories = res.data;\n          this.count = res.count;\n        } catch (err) {\n          this.authService.handleHttpError(err);\n        }\n      });\n    }\n\n    uploadImage(event) {\n      this.file = event.target.files[0];\n      console.log(this.file);\n    }\n\n    store() {\n      this.isStoreLoading = true;\n\n      if (!this.type.name) {\n        this.alertService.toastError('Service type name should not be empty');\n        this.isStoreLoading = false;\n        return;\n      }\n\n      if (!this.type.categoryId) {\n        this.alertService.toastError('Service type category name should be selected');\n        this.isStoreLoading = false;\n        return;\n      }\n\n      if (!this.type.price) {\n        this.alertService.toastError('Service type price should not be empty!');\n        this.isStoreLoading = false;\n        return;\n      }\n\n      if (!this.file) {\n        this.alertService.toastError('Service category icon should not be empty');\n        this.isStoreLoading = false;\n        return;\n      }\n\n      let data = new FormData();\n      data.append('name', this.type.name);\n      data.append('categoryId', this.type.categoryId);\n      data.append('currency', this.type.currency);\n      data.append('isMotoAllowed', this.type.isMotoAllowed + '');\n      data.append('price', this.type.price + '');\n      data.append('showQuantityInput', this.type.showQuantityInput + '');\n      data.append('showVehicleSelection', this.type.showVehicleSelection + '');\n      data.append('isActive', this.type.isActive + '');\n      data.append('icon', this.file, this.file.name);\n      this.serviceTypeService.store(data).subscribe({\n        next: data => {\n          console.log(data);\n          this.alertService.toastSuccess('Service Type Added Successfully');\n          this.isStoreLoading = false;\n          this.activeModal.close(true);\n        },\n        error: error => {\n          console.log(error);\n          this.authService.handleHttpError(error);\n          this.isStoreLoading = false;\n        }\n      });\n    }\n\n  }\n\n  NewServiceTypeModalComponent.ɵfac = function NewServiceTypeModalComponent_Factory(t) {\n    return new (t || NewServiceTypeModalComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.AlertService), i0.ɵɵdirectiveInject(i3.ServiceTypesService), i0.ɵɵdirectiveInject(i4.ServiceCategoriesService), i0.ɵɵdirectiveInject(i5.NgbActiveModal));\n  };\n\n  NewServiceTypeModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewServiceTypeModalComponent,\n    selectors: [[\"app-new-service-type-modal\"]],\n    decls: 35,\n    vars: 10,\n    consts: [[1, \"card\", \"card-signin\", \"my-5\", 2, \"border\", \"0\", \"margin\", \"0!important\"], [1, \"card-body\"], [\"translate\", \"\", 1, \"card-title\", \"text-center\"], [1, \"form-signin\", 3, \"ngSubmit\"], [1, \"form-label-group\", \"m-4\"], [\"name\", \"role\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"name\", \"name\", \"id\", \"name\", \"placeholder\", \"Name\", \"required\", \"\", \"autofocus\", \"\", 1, \"form-control\", \"common-input\", \"px-3\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-label-group\", \"m-4\", \"col-md-6\"], [\"for\", \"isActive\"], [\"type\", \"checkbox\", \"name\", \"isActive\", \"id\", \"isActive\", \"required\", \"\", \"autofocus\", \"\", 1, \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"showQuantityInput\"], [\"type\", \"checkbox\", \"name\", \"showQuantityInput\", \"id\", \"showQuantityInput\", \"required\", \"\", \"autofocus\", \"\", 1, \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"showVehicleSelection\"], [\"type\", \"checkbox\", \"name\", \"showVehicleSelection\", \"id\", \"showVehicleSelection\", \"required\", \"\", \"autofocus\", \"\", 1, \"\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"form-label-group m-4 col-md-6\", 4, \"ngIf\"], [\"type\", \"file\", \"name\", \"icon\", \"id\", \"icon\", \"required\", \"\", \"autofocus\", \"\", 1, \"\", 3, \"change\"], [1, \"btn\", \"btn-lg\", \"btn-primary\", \"btn-block\", \"form-control\", \"text-uppercase\", 3, \"disabled\"], [\"translate\", \"\", 4, \"ngIf\"], [\"width\", \"20px\", 3, \"src\", 4, \"ngIf\"], [3, \"value\"], [\"for\", \"isMotoAllowed\"], [\"type\", \"checkbox\", \"name\", \"isMotoAllowed\", \"id\", \"isMotoAllowed\", \"required\", \"\", \"autofocus\", \"\", 1, \"\", 3, \"ngModel\", \"ngModelChange\"], [\"translate\", \"\"], [\"width\", \"20px\", 3, \"src\"]],\n    template: function NewServiceTypeModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n        i0.ɵɵtext(3, \"Add a new Service Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function NewServiceTypeModalComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.store();\n        });\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\");\n        i0.ɵɵtext(7, \"Service Category:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function NewServiceTypeModalComponent_Template_select_ngModelChange_8_listener($event) {\n          return ctx.type.categoryId = $event;\n        });\n        i0.ɵɵtemplate(9, NewServiceTypeModalComponent_option_9_Template, 2, 2, \"option\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\");\n        i0.ɵɵtext(12, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function NewServiceTypeModalComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.type.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 9);\n        i0.ɵɵtext(16, \"Is Active? \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function NewServiceTypeModalComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.type.isActive = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 8)(19, \"label\", 11);\n        i0.ɵɵtext(20, \"Show Quantity Input? \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function NewServiceTypeModalComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.type.showQuantityInput = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 8)(23, \"label\", 13);\n        i0.ɵɵtext(24, \"Show Vehicle Selection? \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"input\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function NewServiceTypeModalComponent_Template_input_ngModelChange_25_listener($event) {\n          return ctx.type.showVehicleSelection = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(26, NewServiceTypeModalComponent_div_26_Template, 4, 1, \"div\", 15);\n        i0.ɵɵelementStart(27, \"div\", 4)(28, \"label\", 9);\n        i0.ɵɵtext(29, \"Icon: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"input\", 16);\n        i0.ɵɵlistener(\"change\", function NewServiceTypeModalComponent_Template_input_change_30_listener($event) {\n          return ctx.uploadImage($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 4)(32, \"button\", 17);\n        i0.ɵɵtemplate(33, NewServiceTypeModalComponent_span_33_Template, 2, 0, \"span\", 18);\n        i0.ɵɵtemplate(34, NewServiceTypeModalComponent_img_34_Template, 1, 1, \"img\", 19);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.type.categoryId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.serviceCategories);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.type.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.type.isActive);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.type.showQuantityInput);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.type.showVehicleSelection);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.type.showVehicleSelection);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", ctx.isStoreLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isStoreLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isStoreLoading);\n      }\n    },\n    dependencies: [i6.NgForOf, i6.NgIf, i7.ɵNgNoValidate, i7.NgSelectOption, i7.ɵNgSelectMultipleOption, i7.DefaultValueAccessor, i7.CheckboxControlValueAccessor, i7.SelectControlValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.CheckboxRequiredValidator, i7.NgModel, i7.NgForm]\n  });\n  return NewServiceTypeModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}