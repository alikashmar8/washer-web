{"ast":null,"code":"import { Observable, Subject, BehaviorSubject, of } from 'rxjs';\nimport { delay, tap, take, map } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, Component, ViewChild, ViewChildren, Directive, HostListener, NgModule } from '@angular/core';\nimport { style, trigger, state, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { __classPrivateFieldGet } from 'tslib';\nconst _c0 = [\"elConfirmBoxWrapper\"];\nconst _c1 = [\"elTextWrapper\"];\nconst _c2 = [\"elTitleWrapper\"];\nconst _c3 = [\"elButtonWrapper\"];\nconst _c4 = [\"elButton\"];\n\nfunction ConfirmBoxWrapperComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8, 9)(2, \"div\", 10)(3, \"div\", 11)(4, \"div\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.confirmBoxBelonging.dispatch.title, \" \");\n  }\n}\n\nfunction ConfirmBoxWrapperComponent_div_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelement(1, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"className\", ctx_r8.getIconClasses());\n  }\n}\n\nfunction ConfirmBoxWrapperComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13, 14);\n    i0.ɵɵtemplate(2, ConfirmBoxWrapperComponent_div_4_div_2_Template, 2, 1, \"div\", 15);\n    i0.ɵɵelementStart(3, \"div\", 16)(4, \"div\", 10);\n    i0.ɵɵelement(5, \"div\", 17);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r2.confirmBoxBelonging.dispatch.title ? \"\" : \"without-title\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.confirmBoxBelonging.confirmBoxCoreConfig.disableIcon);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r2.confirmBoxBelonging.dispatch.message, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ConfirmBoxWrapperComponent_div_7_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 22, 23);\n    i0.ɵɵlistener(\"click\", function ConfirmBoxWrapperComponent_div_7_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const button_r10 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.onCustomButton(button_r10));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const button_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"display\", button_r10.hidden ? \"none\" : \"inline\");\n    i0.ɵɵproperty(\"disabled\", button_r10.disabled)(\"className\", ctx_r9.layoutHelper.getButtonClasses(button_r10.layoutType, \"ed-btn ed-btn-md\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", button_r10.label, \" \");\n  }\n}\n\nconst _c5 = function (a0) {\n  return {\n    \"text-align\": a0\n  };\n};\n\nfunction ConfirmBoxWrapperComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtemplate(1, ConfirmBoxWrapperComponent_div_7_button_1_Template, 3, 5, \"button\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c5, ctx_r4.confirmBoxBelonging.confirmBoxCoreConfig.buttonPosition));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.confirmBoxBelonging.buttons);\n  }\n}\n\nfunction ConfirmBoxWrapperComponent_div_8_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 26, 23);\n    i0.ɵɵlistener(\"click\", function ConfirmBoxWrapperComponent_div_8_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.onButtonClick(\"decline\"));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r15.confirmBoxBelonging.confirmBoxCoreConfig.declineLabel, \" \");\n  }\n}\n\nfunction ConfirmBoxWrapperComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"button\", 24, 23);\n    i0.ɵɵlistener(\"click\", function ConfirmBoxWrapperComponent_div_8_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.onButtonClick(\"confirm\"));\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, ConfirmBoxWrapperComponent_div_8_button_4_Template, 3, 1, \"button\", 25);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c5, ctx_r5.confirmBoxBelonging.confirmBoxCoreConfig.buttonPosition));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"className\", ctx_r5.layoutHelper.getButtonClasses(ctx_r5.confirmBoxBelonging.confirmBoxCoreConfig.layoutType, \"ed-btn ed-btn-md\", \"auto-button\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.confirmBoxBelonging.confirmBoxCoreConfig.confirmLabel, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.confirmBoxBelonging.confirmBoxCoreConfig.declineLabel);\n  }\n}\n\nconst _c6 = function (a0) {\n  return {\n    closeDelay: a0\n  };\n};\n\nconst _c7 = function (a0, a1) {\n  return {\n    value: a0,\n    params: a1\n  };\n};\n\nconst _c8 = function (a0, a1, a2) {\n  return {\n    width: a0,\n    height: a1,\n    opacity: a2\n  };\n};\n\nconst _c9 = [\"elDialogWrapper\"];\n\nfunction DialogWrapperComponent_ng_template_5_Template(rf, ctx) {}\n\nfunction DialogWrapperComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction DialogWrapperComponent_ng_template_7_Template(rf, ctx) {}\n\nfunction DialogWrapperComponent_ng_template_11_Template(rf, ctx) {}\n\nfunction DialogWrapperComponent_div_14_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 16, 17);\n    i0.ɵɵlistener(\"click\", function DialogWrapperComponent_div_14_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const button_r9 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.onCustomButton(button_r9));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const button_r9 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"display\", button_r9.hidden ? \"none\" : \"inline\");\n    i0.ɵɵproperty(\"disabled\", button_r9.disabled)(\"className\", ctx_r8.layoutHelper.getButtonClasses(button_r9.layoutType, \"ed-btn ed-btn-lg\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", button_r9.label, \" \");\n  }\n}\n\nfunction DialogWrapperComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, DialogWrapperComponent_div_14_button_1_Template, 3, 5, \"button\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c5, ctx_r7.dialogBelonging.dialogCoreConfig.buttonPosition));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.dialogBelonging.buttons);\n  }\n}\n\nconst _c10 = function () {\n  return {\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n    height: \"100%\",\n    width: \"100%\",\n    borderRadius: \"0\"\n  };\n};\n\nconst _c11 = function () {\n  return {\n    width: \"100%\",\n    height: \"100%\"\n  };\n};\n\nconst _c12 = function (a0, a1, a2, a3, a4, a5) {\n  return {\n    width: a0,\n    minWidth: a1,\n    maxWidth: a2,\n    height: a3,\n    minHeight: a4,\n    maxHeight: a5\n  };\n};\n\nfunction ToastNotificationSimpleWrapperComponent_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelement(1, \"span\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"className\", ctx_r7.getIconClasses());\n  }\n}\n\nfunction ToastNotificationSimpleWrapperComponent_div_2_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵlistener(\"click\", function ToastNotificationSimpleWrapperComponent_div_2_span_6_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.closeIcon());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ToastNotificationSimpleWrapperComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8, 9);\n    i0.ɵɵtemplate(2, ToastNotificationSimpleWrapperComponent_div_2_div_2_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelementStart(3, \"div\", 11)(4, \"div\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵtemplate(6, ToastNotificationSimpleWrapperComponent_div_2_span_6_Template, 1, 0, \"span\", 13);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.toastNotificationBelonging.toastCoreConfig.disableIcon);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.toastNotificationBelonging.dispatch.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.buttonsExist);\n  }\n}\n\nfunction ToastNotificationSimpleWrapperComponent_div_3_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r12.toastNotificationBelonging.dispatch.message);\n  }\n}\n\nfunction ToastNotificationSimpleWrapperComponent_div_3_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 22);\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r13.toastNotificationBelonging.dispatch.message, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ToastNotificationSimpleWrapperComponent_div_3_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵlistener(\"click\", function ToastNotificationSimpleWrapperComponent_div_3_span_6_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.closeIcon());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c13 = function (a0) {\n  return {\n    \"only-message\": a0\n  };\n};\n\nfunction ToastNotificationSimpleWrapperComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17, 18)(2, \"div\", 19)(3, \"div\", 11);\n    i0.ɵɵtemplate(4, ToastNotificationSimpleWrapperComponent_div_3_div_4_Template, 3, 1, \"div\", 20);\n    i0.ɵɵtemplate(5, ToastNotificationSimpleWrapperComponent_div_3_div_5_Template, 1, 1, \"div\", 21);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(6, ToastNotificationSimpleWrapperComponent_div_3_span_6_Template, 1, 0, \"span\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(5, _c5, ctx_r1.toastNotificationBelonging.toastCoreConfig.textPosition))(\"ngClass\", i0.ɵɵpureFunction1(7, _c13, !ctx_r1.toastNotificationBelonging.dispatch.title));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.toastNotificationBelonging.toastCoreConfig.allowHtmlMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.toastNotificationBelonging.toastCoreConfig.allowHtmlMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.buttonsExist && !ctx_r1.toastNotificationBelonging.dispatch.title);\n  }\n}\n\nfunction ToastNotificationSimpleWrapperComponent_div_6_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 25, 26);\n    i0.ɵɵlistener(\"click\", function ToastNotificationSimpleWrapperComponent_div_6_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const button_r18 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.onCustomButton(button_r18));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const button_r18 = ctx.$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"display\", button_r18.hidden ? \"none\" : \"inline\");\n    i0.ɵɵproperty(\"disabled\", button_r18.disabled)(\"className\", ctx_r17.layoutHelper.getButtonClasses(button_r18.layoutType, \"ed-btn ed-btn-sm\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", button_r18.label, \" \");\n  }\n}\n\nfunction ToastNotificationSimpleWrapperComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, ToastNotificationSimpleWrapperComponent_div_6_button_1_Template, 3, 5, \"button\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c5, ctx_r3.toastNotificationBelonging.toastCoreConfig.buttonPosition));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.toastNotificationBelonging.buttons);\n  }\n}\n\nfunction ToastNotificationSimpleWrapperComponent_div_7_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function ToastNotificationSimpleWrapperComponent_div_7_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.onButtonClick(\"confirm\"));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"className\", ctx_r22.layoutHelper.getButtonClasses(ctx_r22.toastNotificationBelonging.toastCoreConfig.layoutType, \"ed-btn ed-btn-sm\", \"auto-button\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r22.toastNotificationBelonging.toastCoreConfig.confirmLabel, \" \");\n  }\n}\n\nfunction ToastNotificationSimpleWrapperComponent_div_7_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function ToastNotificationSimpleWrapperComponent_div_7_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r26.onButtonClick(\"decline\"));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r23.toastNotificationBelonging.toastCoreConfig.declineLabel, \" \");\n  }\n}\n\nfunction ToastNotificationSimpleWrapperComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, ToastNotificationSimpleWrapperComponent_div_7_button_1_Template, 2, 2, \"button\", 27);\n    i0.ɵɵtemplate(2, ToastNotificationSimpleWrapperComponent_div_7_button_2_Template, 2, 1, \"button\", 28);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c5, ctx_r4.toastNotificationBelonging.toastCoreConfig.buttonPosition));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.toastNotificationBelonging.toastCoreConfig.confirmLabel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.toastNotificationBelonging.toastCoreConfig.declineLabel);\n  }\n}\n\nconst _c14 = function (a0) {\n  return {\n    width: a0\n  };\n};\n\nfunction ToastNotificationSimpleWrapperComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵelement(1, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(1, _c14, (ctx_r5.toastNotificationBelonging.toastCoreConfig.progressBar === 1 ? ctx_r5.timer.Progress : ctx_r5.timer.Remaining) + \"%\"));\n  }\n}\n\nfunction ToastNotificationWrapperComponent_div_2_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵlistener(\"click\", function ToastNotificationWrapperComponent_div_2_span_5_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.closeIcon());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ToastNotificationWrapperComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8, 9)(2, \"div\", 10)(3, \"div\", 11);\n    i0.ɵɵtext(4);\n    i0.ɵɵtemplate(5, ToastNotificationWrapperComponent_div_2_span_5_Template, 1, 0, \"span\", 12);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.toastNotificationBelonging.dispatch.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.buttonsExist);\n  }\n}\n\nfunction ToastNotificationWrapperComponent_div_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelement(1, \"span\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"className\", ctx_r11.getIconClasses());\n  }\n}\n\nfunction ToastNotificationWrapperComponent_div_3_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r12.toastNotificationBelonging.dispatch.message);\n  }\n}\n\nfunction ToastNotificationWrapperComponent_div_3_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 22);\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r13.toastNotificationBelonging.dispatch.message, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ToastNotificationWrapperComponent_div_3_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵlistener(\"click\", function ToastNotificationWrapperComponent_div_3_span_7_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.closeIcon());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ToastNotificationWrapperComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14, 15);\n    i0.ɵɵtemplate(2, ToastNotificationWrapperComponent_div_3_div_2_Template, 2, 1, \"div\", 16);\n    i0.ɵɵelementStart(3, \"div\", 17)(4, \"div\", 10);\n    i0.ɵɵtemplate(5, ToastNotificationWrapperComponent_div_3_div_5_Template, 3, 1, \"div\", 18);\n    i0.ɵɵtemplate(6, ToastNotificationWrapperComponent_div_3_div_6_Template, 1, 1, \"div\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(7, ToastNotificationWrapperComponent_div_3_span_7_Template, 1, 0, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.toastNotificationBelonging.toastCoreConfig.disableIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(6, _c5, ctx_r1.toastNotificationBelonging.toastCoreConfig.textPosition))(\"ngClass\", i0.ɵɵpureFunction1(8, _c13, !ctx_r1.toastNotificationBelonging.dispatch.title));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.toastNotificationBelonging.toastCoreConfig.allowHtmlMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.toastNotificationBelonging.toastCoreConfig.allowHtmlMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.buttonsExist && !ctx_r1.toastNotificationBelonging.dispatch.title);\n  }\n}\n\nfunction ToastNotificationWrapperComponent_div_6_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 25, 26);\n    i0.ɵɵlistener(\"click\", function ToastNotificationWrapperComponent_div_6_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const button_r18 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.onCustomButton(button_r18));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const button_r18 = ctx.$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"display\", button_r18.hidden ? \"none\" : \"inline\");\n    i0.ɵɵproperty(\"disabled\", button_r18.disabled)(\"className\", ctx_r17.layoutHelper.getButtonClasses(button_r18.layoutType, \"ed-btn ed-btn-sm\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", button_r18.label, \" \");\n  }\n}\n\nfunction ToastNotificationWrapperComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, ToastNotificationWrapperComponent_div_6_button_1_Template, 3, 5, \"button\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c5, ctx_r3.toastNotificationBelonging.toastCoreConfig.buttonPosition));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.toastNotificationBelonging.buttons);\n  }\n}\n\nfunction ToastNotificationWrapperComponent_div_7_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 29, 26);\n    i0.ɵɵlistener(\"click\", function ToastNotificationWrapperComponent_div_7_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r25.onButtonClick(\"confirm\"));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"className\", ctx_r22.layoutHelper.getButtonClasses(ctx_r22.toastNotificationBelonging.toastCoreConfig.layoutType, \"ed-btn ed-btn-sm\", \"auto-button\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r22.toastNotificationBelonging.toastCoreConfig.confirmLabel, \" \");\n  }\n}\n\nfunction ToastNotificationWrapperComponent_div_7_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 30, 26);\n    i0.ɵɵlistener(\"click\", function ToastNotificationWrapperComponent_div_7_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r28.onButtonClick(\"decline\"));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r23.toastNotificationBelonging.toastCoreConfig.declineLabel, \" \");\n  }\n}\n\nfunction ToastNotificationWrapperComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, ToastNotificationWrapperComponent_div_7_button_1_Template, 3, 2, \"button\", 27);\n    i0.ɵɵtemplate(2, ToastNotificationWrapperComponent_div_7_button_2_Template, 3, 1, \"button\", 28);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c5, ctx_r4.toastNotificationBelonging.toastCoreConfig.buttonPosition));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.toastNotificationBelonging.toastCoreConfig.confirmLabel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.toastNotificationBelonging.toastCoreConfig.declineLabel);\n  }\n}\n\nfunction ToastNotificationWrapperComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵelement(1, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(1, _c14, (ctx_r5.toastNotificationBelonging.toastCoreConfig.progressBar === 1 ? ctx_r5.timer.Progress : ctx_r5.timer.Remaining) + \"%\"));\n  }\n}\n\nvar DialogLayoutDisplay = /*#__PURE__*/(() => {\n  (function (DialogLayoutDisplay) {\n    DialogLayoutDisplay[DialogLayoutDisplay[\"NONE\"] = 0] = \"NONE\";\n    DialogLayoutDisplay[DialogLayoutDisplay[\"SUCCESS\"] = 1] = \"SUCCESS\";\n    DialogLayoutDisplay[DialogLayoutDisplay[\"INFO\"] = 2] = \"INFO\";\n    DialogLayoutDisplay[DialogLayoutDisplay[\"WARNING\"] = 3] = \"WARNING\";\n    DialogLayoutDisplay[DialogLayoutDisplay[\"DANGER\"] = 4] = \"DANGER\";\n    DialogLayoutDisplay[DialogLayoutDisplay[\"CUSTOM_ONE\"] = 20] = \"CUSTOM_ONE\";\n    DialogLayoutDisplay[DialogLayoutDisplay[\"CUSTOM_TWO\"] = 21] = \"CUSTOM_TWO\";\n    DialogLayoutDisplay[DialogLayoutDisplay[\"CUSTOM_THREE\"] = 22] = \"CUSTOM_THREE\";\n    DialogLayoutDisplay[DialogLayoutDisplay[\"CUSTOM_FOUR\"] = 23] = \"CUSTOM_FOUR\";\n    DialogLayoutDisplay[DialogLayoutDisplay[\"CUSTOM_FIVE\"] = 24] = \"CUSTOM_FIVE\";\n  })(DialogLayoutDisplay || (DialogLayoutDisplay = {}));\n\n  return DialogLayoutDisplay;\n})();\nvar ButtonLayoutDisplay = /*#__PURE__*/(() => {\n  (function (ButtonLayoutDisplay) {\n    ButtonLayoutDisplay[ButtonLayoutDisplay[\"NONE\"] = 0] = \"NONE\";\n    ButtonLayoutDisplay[ButtonLayoutDisplay[\"SUCCESS\"] = 1] = \"SUCCESS\";\n    ButtonLayoutDisplay[ButtonLayoutDisplay[\"INFO\"] = 2] = \"INFO\";\n    ButtonLayoutDisplay[ButtonLayoutDisplay[\"WARNING\"] = 3] = \"WARNING\";\n    ButtonLayoutDisplay[ButtonLayoutDisplay[\"DANGER\"] = 4] = \"DANGER\";\n    ButtonLayoutDisplay[ButtonLayoutDisplay[\"DARK\"] = 5] = \"DARK\";\n    ButtonLayoutDisplay[ButtonLayoutDisplay[\"LIGHT\"] = 6] = \"LIGHT\";\n    ButtonLayoutDisplay[ButtonLayoutDisplay[\"PRIMARY\"] = 7] = \"PRIMARY\";\n    ButtonLayoutDisplay[ButtonLayoutDisplay[\"SECONDARY\"] = 8] = \"SECONDARY\";\n    ButtonLayoutDisplay[ButtonLayoutDisplay[\"LINK\"] = 9] = \"LINK\";\n    ButtonLayoutDisplay[ButtonLayoutDisplay[\"CUSTOM_ONE\"] = 20] = \"CUSTOM_ONE\";\n    ButtonLayoutDisplay[ButtonLayoutDisplay[\"CUSTOM_TWO\"] = 21] = \"CUSTOM_TWO\";\n    ButtonLayoutDisplay[ButtonLayoutDisplay[\"CUSTOM_THREE\"] = 22] = \"CUSTOM_THREE\";\n    ButtonLayoutDisplay[ButtonLayoutDisplay[\"CUSTOM_FOUR\"] = 23] = \"CUSTOM_FOUR\";\n    ButtonLayoutDisplay[ButtonLayoutDisplay[\"CUSTOM_FIVE\"] = 24] = \"CUSTOM_FIVE\";\n  })(ButtonLayoutDisplay || (ButtonLayoutDisplay = {}));\n\n  return ButtonLayoutDisplay;\n})();\nvar ColorVariance = /*#__PURE__*/(() => {\n  (function (ColorVariance) {\n    ColorVariance[ColorVariance[\"SUCCESS\"] = 1] = \"SUCCESS\";\n    ColorVariance[ColorVariance[\"INFO\"] = 2] = \"INFO\";\n    ColorVariance[ColorVariance[\"WARNING\"] = 3] = \"WARNING\";\n    ColorVariance[ColorVariance[\"DANGER\"] = 4] = \"DANGER\";\n    ColorVariance[ColorVariance[\"DARK\"] = 5] = \"DARK\";\n    ColorVariance[ColorVariance[\"LIGHT\"] = 6] = \"LIGHT\";\n    ColorVariance[ColorVariance[\"PRIMARY\"] = 7] = \"PRIMARY\";\n    ColorVariance[ColorVariance[\"SECONDARY\"] = 8] = \"SECONDARY\";\n    ColorVariance[ColorVariance[\"LINK\"] = 9] = \"LINK\";\n    ColorVariance[ColorVariance[\"CUSTOM_ONE\"] = 20] = \"CUSTOM_ONE\";\n    ColorVariance[ColorVariance[\"CUSTOM_TWO\"] = 21] = \"CUSTOM_TWO\";\n    ColorVariance[ColorVariance[\"CUSTOM_THREE\"] = 22] = \"CUSTOM_THREE\";\n    ColorVariance[ColorVariance[\"CUSTOM_FOUR\"] = 23] = \"CUSTOM_FOUR\";\n    ColorVariance[ColorVariance[\"CUSTOM_FIVE\"] = 24] = \"CUSTOM_FIVE\";\n  })(ColorVariance || (ColorVariance = {}));\n\n  return ColorVariance;\n})();\nvar AppearanceAnimation = /*#__PURE__*/(() => {\n  (function (AppearanceAnimation) {\n    AppearanceAnimation[\"NONE\"] = \"noneIn\";\n    AppearanceAnimation[\"BOUNCE_IN\"] = \"bounceIn\";\n    AppearanceAnimation[\"SWING\"] = \"swing\";\n    AppearanceAnimation[\"ZOOM_IN\"] = \"zoomIn\";\n    AppearanceAnimation[\"ZOOM_IN_ROTATE\"] = \"zoomInRotate\";\n    AppearanceAnimation[\"ELASTIC\"] = \"elastic\";\n    AppearanceAnimation[\"JELLO\"] = \"jello\";\n    AppearanceAnimation[\"FADE_IN\"] = \"fadeIn\";\n    AppearanceAnimation[\"SLIDE_IN_UP\"] = \"slideInUp\";\n    AppearanceAnimation[\"SLIDE_IN_DOWN\"] = \"slideInDown\";\n    AppearanceAnimation[\"SLIDE_IN_LEFT\"] = \"slideInLeft\";\n    AppearanceAnimation[\"SLIDE_IN_RIGHT\"] = \"slideInRight\";\n  })(AppearanceAnimation || (AppearanceAnimation = {}));\n\n  return AppearanceAnimation;\n})();\nvar DisappearanceAnimation = /*#__PURE__*/(() => {\n  (function (DisappearanceAnimation) {\n    DisappearanceAnimation[\"NONE\"] = \"noneOut\";\n    DisappearanceAnimation[\"FADE_OUT\"] = \"fadeOut\";\n    DisappearanceAnimation[\"ZOOM_OUT_WIND\"] = \"zoomOutWind\";\n    DisappearanceAnimation[\"BOUNCE_OUT\"] = \"bounceOut\";\n    DisappearanceAnimation[\"FLIP_OUT\"] = \"flipOutY\";\n    DisappearanceAnimation[\"ZOOM_OUT\"] = \"zoomOut\";\n    DisappearanceAnimation[\"ZOOM_OUT_ROTATE\"] = \"zoomOutRotate\";\n    DisappearanceAnimation[\"SLIDE_OUT_UP\"] = \"slideOutUp\";\n    DisappearanceAnimation[\"SLIDE_OUT_DOWN\"] = \"slideOutDown\";\n    DisappearanceAnimation[\"SLIDE_OUT_LEFT\"] = \"slideOutLeft\";\n    DisappearanceAnimation[\"SLIDE_OUT_RIGHT\"] = \"slideOutRight\";\n  })(DisappearanceAnimation || (DisappearanceAnimation = {}));\n\n  return DisappearanceAnimation;\n})();\nvar MotionBlockAnimation = /*#__PURE__*/(() => {\n  (function (MotionBlockAnimation) {\n    MotionBlockAnimation[MotionBlockAnimation[\"NONE\"] = 0] = \"NONE\";\n    MotionBlockAnimation[\"WOBBLE\"] = \"wobble\";\n  })(MotionBlockAnimation || (MotionBlockAnimation = {}));\n\n  return MotionBlockAnimation;\n})();\n\nclass Sizes {\n  constructor() {\n    this.width = null;\n    this.minWidth = null;\n    this.maxWidth = null;\n    this.height = null;\n    this.minHeight = null;\n    this.maxHeight = null;\n    this.fullScreen = null;\n  }\n\n}\n\nclass dispatch {\n  constructor() {\n    this.title = null;\n    this.message = null;\n  }\n\n}\n\nclass ButtonMaker {\n  constructor(label, ID, layoutType = ButtonLayoutDisplay.PRIMARY, disabled = false) {\n    this.label = label;\n    this.ID = ID;\n    this.layoutType = layoutType;\n    this.disabled = disabled;\n    this.hidden = false;\n  }\n\n  disable() {\n    this.disabled = true;\n  }\n\n  enable() {\n    this.disabled = false;\n  }\n\n  hide() {\n    this.hidden = true;\n  }\n\n  show() {\n    this.hidden = false;\n  }\n\n}\n\nclass GlobalUserConfig {\n  constructor(_GlobalUserConfig) {\n    this.colorList = new ColorTypes();\n\n    if (_GlobalUserConfig) {\n      const dataControl = new DataControl();\n      dataControl.copyValuesFrom(_GlobalUserConfig, this);\n      const colorList = new ColorTypes();\n      this.colorList = dataControl.copyValuesFrom(this.colorList, colorList);\n    }\n  }\n\n}\n\nclass ColorTypes {\n  constructor() {\n    this.primary = null;\n    this.secondary = null;\n    this.success = null;\n    this.info = null;\n    this.warning = null;\n    this.danger = null;\n    this.light = null;\n    this.dark = null;\n    this.customOne = null;\n    this.customTwo = null;\n    this.customThree = null;\n    this.customFour = null;\n    this.customFive = null;\n  }\n\n}\n\nclass GlobalConfig {\n  constructor() {\n    this.displayColor = new DisplayColor();\n  }\n\n}\n\nclass DisplayColor {\n  constructor() {\n    this.primary = null;\n    this.secondary = null;\n    this.success = null;\n    this.info = null;\n    this.warning = null;\n    this.danger = null;\n    this.light = null;\n    this.dark = null;\n    this.customOne = null;\n    this.customTwo = null;\n    this.customThree = null;\n    this.customFour = null;\n    this.customFive = null;\n  }\n\n}\n\nclass ColorProvider {\n  constructor(_Color) {\n    this.Base = null;\n    this.Brighten = null;\n    this.BrightenForShade = null;\n    this.Darken = null;\n    this.DarkenForShade = null;\n    this.ContrastColor = null;\n    this.TransparentDarkenVariance = null;\n    this.BrightShade = null;\n    this.BrightWarmly = null;\n    this.IsBaseBright = null;\n\n    if (this.Base = this.isColor(_Color)) {\n      this.Brighten = this.brightness(this.Base, 'brighten', 25);\n      this.BrightenForShade = this.brightness(this.Base, 'brighten', 10);\n      this.Darken = this.brightness(this.Base, 'darken', 20);\n      this.DarkenForShade = this.brightness(this.Base, 'darken', 10);\n      const luminance = Math.floor(this.luminance(this.Base) * 100);\n      const darken = luminance > 50 ? 5 : luminance > 40 ? 10 : luminance > 20 ? 15 : luminance;\n      const brighten = luminance > 55 ? 65 : luminance > 45 ? 60 : luminance > 20 ? 55 : luminance > 10 ? 45 : 80;\n      this.BrightShade = this.brightness(this.brightness(this.Base, 'darken', darken), 'brighten', brighten);\n      this.BrightWarmly = this.brightness(this.brightness(this.saturate(this.Base), 'darken', darken - 10), 'brighten', brighten - 5);\n      this.TransparentDarkenVariance = this.brightness(this.transparentize(this.Base, 80), 'darken', 40);\n\n      if (this.isBright(this.Base)) {\n        this.ContrastColor = 'rgba(58,65,71,0.5)';\n        this.IsBaseBright = true;\n      } else {\n        this.ContrastColor = 'rgb(255,255,255, 0.7)';\n        this.IsBaseBright = false;\n      }\n    }\n  }\n\n  saturate(_Rgb) {\n    const rgbIntArray = this.getRGBArray(_Rgb);\n    const greyVal = this.getLightnessOfRGB(_Rgb) * 55;\n    const [lowest, middle, highest] = this.getLowMidHi(rgbIntArray);\n\n    if (lowest.val === highest.val) {\n      return _Rgb;\n    }\n\n    const saturationRange = Math.round(Math.min(255 - greyVal, greyVal));\n    const maxChange = Math.min(255 - highest.val, lowest.val);\n    const changeAmount = Math.min(saturationRange / 10, maxChange);\n    const middleValueRatio = (greyVal - middle.val) / (greyVal - highest.val) + 0.07;\n    const returnArray = [];\n    returnArray[highest.index] = Math.round(highest.val + changeAmount);\n    returnArray[lowest.index] = Math.round(lowest.val - changeAmount);\n    returnArray[middle.index] = Math.round(greyVal + (returnArray[highest.index] - greyVal) * middleValueRatio + 5);\n    return `rgb(${[returnArray].join()})`;\n  }\n\n  brightness(_Rgb, _Action, _Percentage) {\n    const rgbIntArray = this.getRGBArray(_Rgb);\n    const [lowest, middle, highest] = this.getLowMidHi(rgbIntArray);\n\n    if (_Action === 'brighten' && lowest.val === 255) {\n      return _Rgb;\n    }\n\n    if (_Action === 'darken' && highest.val === 0) {\n      return _Rgb;\n    }\n\n    const amount = _Percentage / 100 * 255;\n    let returnList = [];\n\n    if (_Action === 'brighten') {\n      returnList[lowest.index] = Math.round(lowest.val + Math.min(255 - lowest.val, amount));\n      const increaseFraction = (returnList[lowest.index] - lowest.val) / (255 - lowest.val);\n      returnList[middle.index] = middle.val + (255 - middle.val) * increaseFraction;\n      returnList[highest.index] = highest.val + (255 - highest.val) * increaseFraction;\n    }\n\n    if (_Action === 'darken') {\n      returnList[highest.index] = highest.val - Math.min(highest.val, amount);\n      const decreaseFraction = (highest.val - returnList[highest.index]) / highest.val;\n      returnList[middle.index] = middle.val - middle.val * decreaseFraction;\n      returnList[lowest.index] = lowest.val - lowest.val * decreaseFraction;\n    }\n\n    returnList = returnList.map(item => Math.round(item));\n\n    if (rgbIntArray.length > 3) {\n      returnList.push(rgbIntArray[3]);\n      return `rgba(${returnList.join()})`;\n    }\n\n    return `rgb(${returnList.join()})`;\n  }\n\n  getLightnessOfRGB(_Rgb) {\n    const rgbIntArray = this.getRGBArray(_Rgb);\n    const highest = Math.max(...rgbIntArray);\n    const lowest = Math.min(...rgbIntArray);\n    return (highest + lowest) / 2 / 255;\n  }\n\n  isBright(_Rgb) {\n    return this.contrast(this.luminance(_Rgb));\n  }\n\n  getLowMidHi(_RgbArray) {\n    const rgbArrayCopy = _RgbArray.slice();\n\n    const rgbArrayWithoutAlpha = _RgbArray.length > 3 ? rgbArrayCopy.reverse().slice(1).reverse() : _RgbArray;\n    let highest = {\n      val: -1,\n      index: -1\n    };\n    let lowest = {\n      val: Infinity,\n      index: -1\n    };\n    rgbArrayWithoutAlpha.map((val, index) => {\n      if (val > highest.val) {\n        highest = {\n          val: val,\n          index: index\n        };\n      }\n\n      if (val < lowest.val) {\n        lowest = {\n          val: val,\n          index: index\n        };\n      }\n    });\n\n    if (lowest.index === highest.index) {\n      lowest.index = highest.index + 1;\n    }\n\n    const middleIndex = 3 - highest.index - lowest.index;\n    const middle = {\n      val: rgbArrayWithoutAlpha[middleIndex],\n      index: middleIndex\n    };\n    return [lowest, middle, highest];\n  }\n\n  contrast(_Luminance) {\n    const brightest = Math.max(1.05, _Luminance + 0.05);\n    const darkest = Math.min(1.05, _Luminance + 0.05);\n    const contrast = brightest / darkest;\n    return contrast < 2.7;\n  }\n\n  isColor(_StrColor) {\n    const CSSDeclaration = new Option().style;\n    CSSDeclaration.color = _StrColor;\n    return CSSDeclaration.color ? CSSDeclaration.color : null;\n  }\n\n  getRGBArray(_Rgb) {\n    return _Rgb.replace(/^(rgb|rgba)\\(/, '').replace(/\\)$/, '').replace(/\\s/g, '').split(',').map(x => +x);\n  }\n\n  luminance(_Rgb) {\n    const rgbIntArray = this.getRGBArray(_Rgb);\n    const W3algorithm = rgbIntArray.map(item => {\n      item /= 255;\n      return item <= 0.03928 ? item / 12.92 : Math.pow((item + 0.055) / 1.055, 2.4);\n    });\n    return W3algorithm[0] * 0.2126 + W3algorithm[1] * 0.7152 + W3algorithm[2] * 0.0722;\n  }\n\n  transparentize(_Rgb, _Percentage) {\n    const baseArray = this.Base.replace(/^(rgb|rgba)\\(/, '').replace(/\\)$/, '').replace(/\\s/g, '').split(',').map(x => +x);\n\n    if (baseArray.length > 3) {\n      baseArray.pop();\n    }\n\n    const amount = (100 - _Percentage) / 100;\n    baseArray.push(amount);\n    return `rgb(${baseArray.join()})`;\n  }\n\n}\n\nclass DataControl {\n  copyValuesFrom(_Data, _DestinationObject) {\n    if (typeof _Data !== 'object') {\n      return _DestinationObject;\n    }\n\n    const dataKeys = Object.keys(_Data);\n    const destinationObjectKeys = Object.keys(_DestinationObject);\n    dataKeys.forEach(key => {\n      if (destinationObjectKeys.find(tKey => tKey === key || tKey === '_' + key)) {\n        if (key.includes('Date')) {\n          const date = Date.parse(_Data[key]);\n\n          if (date) {\n            _DestinationObject[key] = new Date(date);\n          } else {\n            if (_Data[key] !== null) {\n              _DestinationObject[key] = _Data[key];\n            }\n          }\n        } else {\n          if (_Data[key] !== null) {\n            _DestinationObject[key] = _Data[key];\n          }\n        }\n      }\n    });\n    return _DestinationObject;\n  }\n\n}\n\nclass Timer {\n  constructor() {\n    this.TimePassed = 0;\n    this.Progress = 0;\n    this.Remaining = 100;\n  }\n\n  setMilliseconds(_Milliseconds) {\n    this.Milliseconds = _Milliseconds;\n  }\n\n  reset() {\n    this.TimePassed = 0;\n    this.Progress = 0;\n  }\n\n  pause() {\n    this.TimePassed = 0;\n    this.Progress = 0;\n  }\n\n  stop() {\n    this.TimePassed = 0;\n    clearInterval(this.Timer);\n  }\n\n  start() {\n    this.Timer = setInterval(() => {\n      if (this.TimePassed >= this.Milliseconds) {\n        clearInterval(this.Timer);\n        return;\n      }\n\n      this.TimePassed += 100;\n      this.Progress = this.TimePassed * 100 / this.Milliseconds;\n      this.Remaining = 100 - this.Progress;\n    }, 100);\n  }\n\n}\n\nclass ServiceLocator {}\n\nlet ConfirmBoxConfigService = /*#__PURE__*/(() => {\n  class ConfirmBoxConfigService {\n    constructor(userConfig = {}) {\n      this.userConfig = userConfig;\n      this.authorConfig = new ConfirmBoxSettings();\n      this.productionConfig = new ConfirmBoxSettings();\n      const userConfigBase = new ConfirmBoxSettings();\n      const dataControl = new DataControl();\n      dataControl.copyValuesFrom(userConfig.confirmBoxCoreConfig, userConfigBase.confirmBoxCoreConfig);\n      userConfig.confirmBoxCoreConfig = userConfigBase.confirmBoxCoreConfig;\n      this.authorConfig.confirmBoxCoreConfig.width = 'auto';\n      this.authorConfig.confirmBoxCoreConfig.height = 'auto';\n      this.authorConfig.confirmBoxCoreConfig.buttonPosition = 'center';\n      this.authorConfig.confirmBoxCoreConfig.confirmLabel = 'Confirm';\n      this.authorConfig.confirmBoxCoreConfig.declineLabel = 'Decline';\n      this.authorConfig.confirmBoxCoreConfig.disableIcon = false;\n      this.authorConfig.confirmBoxCoreConfig.allowHtmlMessage = false;\n      this.authorConfig.confirmBoxCoreConfig.layoutType = DialogLayoutDisplay.NONE;\n      this.authorConfig.confirmBoxCoreConfig.animationIn = AppearanceAnimation.ZOOM_IN;\n      this.authorConfig.confirmBoxCoreConfig.animationOut = DisappearanceAnimation.ZOOM_OUT;\n      this.authorConfig.confirmBoxCoreConfig.customStyles = new ConfirmBoxCustomStyles();\n      this.authorConfig.confirmBoxCoreConfig.iconStyleClass = null;\n      dataControl.copyValuesFrom(this.authorConfig.confirmBoxCoreConfig, this.productionConfig.confirmBoxCoreConfig);\n      dataControl.copyValuesFrom(userConfig.confirmBoxCoreConfig, this.productionConfig.confirmBoxCoreConfig);\n    }\n\n  }\n\n  ConfirmBoxConfigService.ɵfac = function ConfirmBoxConfigService_Factory(t) {\n    return new (t || ConfirmBoxConfigService)(i0.ɵɵinject('confirmBoxConfig'));\n  };\n\n  ConfirmBoxConfigService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ConfirmBoxConfigService,\n    factory: ConfirmBoxConfigService.ɵfac,\n    providedIn: 'root'\n  });\n  return ConfirmBoxConfigService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass DialogInjector {\n  constructor(ParentInjector, AdditionalTokens) {\n    this.ParentInjector = ParentInjector;\n    this.AdditionalTokens = AdditionalTokens;\n  }\n\n  get(token, notFoundValue, flags) {\n    const value = this.AdditionalTokens.get(token);\n\n    if (value) {\n      return value;\n    }\n\n    return this.ParentInjector.get(token, notFoundValue);\n  }\n\n}\n\nconst bounceIn = [style({\n  transform: 'scale3d(0.7, 0.7, 0.7)',\n  offset: 0,\n  opacity: 0\n}), style({\n  transform: 'scale3d(1.3, 1.3, 1.3)',\n  offset: 0.3,\n  opacity: 0.3\n}), style({\n  transform: 'scale3d(0.95, 0.95, 0.95)',\n  offset: 0.6,\n  opacity: 1\n}), style({\n  transform: 'scale3d(1.03, 1.03, 1.03)',\n  opacity: 1,\n  offset: 0.8\n}), style({\n  transform: 'scale3d(0.97, 0.97, 0.97)',\n  offset: 0.9\n}), style({\n  transform: 'scale3d(1, 1, 1)',\n  offset: 1,\n  opacity: 1\n})];\nconst swing = [style({\n  offset: 0,\n  opacity: 0\n}), style({\n  transform: 'rotate3d(0, 0, 1, 10deg)',\n  offset: 0.2\n}), style({\n  transform: 'rotate3d(0, 0, 1, -7deg)',\n  offset: 0.3,\n  opacity: 1\n}), style({\n  transform: 'rotate3d(0, 0, 1, 3deg)',\n  offset: 0.55\n}), style({\n  transform: 'rotate3d(0, 0, 1, -3deg)',\n  offset: 0.8\n}), style({\n  transform: 'none',\n  offset: 1\n})];\nconst zoomIn = [style({\n  transform: 'scale3d(0.3, 0.3, 0.3)',\n  offset: 0\n}), style({\n  offset: 0.1,\n  opacity: 1\n}), style({\n  transform: 'scale3d(1, 1, 1)',\n  offset: 1\n})];\nconst zoomInRotate = [style({\n  transform: 'scale(0.1) rotate(30deg)',\n  offset: 0,\n  opacity: 0\n}), style({\n  transform: 'rotate(-10deg)',\n  offset: 0.5,\n  opacity: 1\n}), style({\n  transform: 'rotate(3deg)',\n  offset: 0.7\n}), style({\n  transform: 'scale(1)',\n  offset: 1\n})];\nconst elastic = [style({\n  transform: 'scale3d(1, 1, 1)',\n  offset: 0,\n  opacity: 0\n}), style({\n  transform: 'scale3d(1.25, 0.75, 1)',\n  offset: 0.3\n}), style({\n  transform: 'scale3d(0.75, 1.25, 1)',\n  offset: 0.4,\n  opacity: 1\n}), style({\n  transform: 'scale3d(1.15, 0.85, 1)',\n  offset: 0.5\n}), style({\n  transform: 'scale3d(0.95, 1.05, 1)',\n  offset: 0.6\n}), style({\n  transform: 'scale3d(1.05, 0.95, 1)',\n  offset: 0.7\n}), style({\n  transform: 'scale3d(1, 1, 1)',\n  offset: 1\n})];\nconst jello = [style({\n  offset: 0,\n  opacity: 0\n}), style({\n  transform: 'skewX(-12.5deg) skewY(-12.5deg)',\n  offset: 0.111\n}), style({\n  transform: 'skewX(6.25deg) skewY(6.25deg)',\n  offset: 0.222\n}), style({\n  transform: 'skewX(-3.125deg) skewY(-3.125deg)',\n  offset: 0.333,\n  opacity: 1\n}), style({\n  transform: 'skewX(1.5625deg) skewY(1.5625deg)',\n  offset: 0.444\n}), style({\n  transform: 'skewX(-0.78125deg) skewY(-0.78125deg)',\n  offset: 0.555\n}), style({\n  transform: 'skewX(0.390625deg) skewY(0.390625deg)',\n  offset: 0.666\n}), style({\n  transform: 'skewX(0.390625deg) skewY(0.390625deg)',\n  offset: 0.777\n}), style({\n  transform: 'skewX(-0.1953125deg) skewY(-0.1953125deg)',\n  offset: 0.888\n}), style({\n  transform: 'none',\n  offset: 1\n})];\nconst fadeIn = [style({\n  offset: 0,\n  opacity: 0\n}), style({\n  offset: 1,\n  opacity: 1\n})];\nconst slideInUp = [style({\n  offset: 0,\n  opacity: 0,\n  transform: 'translate3d(0, 100%, 0)'\n}), style({\n  offset: 1,\n  opacity: 1,\n  transform: 'translate3d(0, 0, 0)'\n})];\nconst slideInDown = [style({\n  offset: 0,\n  opacity: 0,\n  transform: 'translate3d(0, -100%, 0)'\n}), style({\n  offset: 1,\n  opacity: 1,\n  transform: 'translate3d(0, 0, 0)'\n})];\nconst slideInLeft = [style({\n  offset: 0,\n  opacity: 0,\n  transform: 'translate3d(-100%, 0, 0)'\n}), style({\n  offset: 1,\n  opacity: 1,\n  transform: 'translate3d(0, 0, 0)'\n})];\nconst slideInRight = [style({\n  offset: 0,\n  opacity: 0,\n  transform: 'translate3d(100%, 0, 0)'\n}), style({\n  offset: 1,\n  opacity: 1,\n  transform: 'translate3d(0, 0, 0)'\n})];\nconst fadeOut = [style({\n  offset: 0,\n  opacity: 1\n}), style({\n  offset: 1,\n  opacity: 0\n})];\nconst zoomOutWind = [style({\n  transform: 'scale3d(.475, .475, .475) translate3d(-42px, 0, 0)',\n  offset: 0.4\n}), style({\n  transform: 'scale(.1) translate3d(400px, 0, 0)',\n  'transform-origin': 'top center',\n  offset: 1,\n  opacity: 0\n})];\nconst bounceOut = [style({\n  transform: 'scale3d(1.3, 1.3, 1.3)',\n  offset: 0.3\n}), style({\n  transform: 'scale3d(0.9, 0.9, 0.9)',\n  offset: 0.5\n}), style({\n  transform: 'scale3d(0.3, 0.3, 0.3)',\n  opacity: 0,\n  offset: 1\n})];\nconst flipOutY = [style({\n  transform: 'perspective(400px)',\n  offset: 0\n}), style({\n  transform: 'perspective(400px) rotate3d(0, 1, 0, -15deg)',\n  opacity: 1,\n  offset: 0.33\n}), style({\n  transform: 'perspective(400px) rotate3d(0, 1, 0, 90deg)',\n  opacity: 0,\n  offset: 0.9\n})];\nconst zoomOut = [style({\n  opacity: 1,\n  offset: 0\n}), style({\n  offset: 0.5,\n  transform: 'scale3d(0.3, 0.3, 0.3)',\n  opacity: 0\n}), style({\n  offset: 1,\n  opacity: 0\n})];\nconst zoomOutRotate = [style({\n  opacity: 1,\n  offset: 0\n}), style({\n  offset: 0.9,\n  transform: 'rotate(200deg) scale(0.1)',\n  opacity: 0\n})];\nconst slideOutUp = [style({\n  transform: 'translate3d(0, 0, 0)',\n  offset: 0\n}), style({\n  transform: 'translate3d(0, -100%, 0)',\n  opacity: 0,\n  offset: 1\n})];\nconst slideOutDown = [style({\n  transform: 'translate3d(0, 0, 0)',\n  offset: 0\n}), style({\n  transform: 'translate3d(0, 100%, 0)',\n  opacity: 0,\n  offset: 1\n})];\nconst slideOutLeft = [style({\n  transform: 'translate3d(0, 0, 0)',\n  offset: 0\n}), style({\n  transform: 'translate3d(-100%, 0, 0)',\n  opacity: 0,\n  offset: 1\n})];\nconst slideOutRight = [style({\n  transform: 'translate3d(0, 0, 0)',\n  offset: 0\n}), style({\n  transform: 'translate3d(100%, 0, 0)',\n  opacity: 0,\n  offset: 1\n})];\nconst wobble = [style({\n  transform: 'translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg)',\n  offset: 0.15\n}), style({\n  transform: 'translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg)',\n  offset: 0.3\n}), style({\n  transform: 'translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg)',\n  offset: 0.45\n}), style({\n  transform: 'translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg)',\n  offset: 0.6\n}), style({\n  transform: 'translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg)',\n  offset: 0.75\n}), style({\n  transform: 'none',\n  offset: 1\n})];\n\nfunction boxAnimations() {\n  return trigger('boxAnimations', [state('reset', style({\n    opacity: 1\n  })), state('noneIn', style({\n    opacity: 1\n  })), state('bounceIn', style({\n    opacity: 1\n  })), state('swing', style({\n    opacity: 1\n  })), state('zoomIn', style({\n    opacity: 1\n  })), state('zoomInRotate', style({\n    opacity: 1\n  })), state('elastic', style({\n    opacity: 1\n  })), state('jello', style({\n    opacity: 1\n  })), state('fadeIn', style({\n    opacity: 1\n  })), state('slideInUp', style({\n    opacity: 1\n  })), state('slideInDown', style({\n    opacity: 1\n  })), state('slideInLeft', style({\n    opacity: 1\n  })), state('slideInRight', style({\n    opacity: 1\n  })), transition('* => noneIn', animate('10ms', keyframes(fadeIn))), transition('* => bounceIn', animate('1000ms cubic-bezier(0.215, 0.61, 0.355, 1)', keyframes(bounceIn))), transition('* => swing', animate('800ms', keyframes(swing))), transition('* => zoomIn', animate('400ms ease-in', keyframes(zoomIn))), transition('* => zoomInRotate', animate('800ms ease-in', keyframes(zoomInRotate))), transition('* => elastic', animate('1000ms', keyframes(elastic))), transition('* => jello', animate(1000, keyframes(jello))), transition('* => fadeIn', animate('400ms ease-in', keyframes(fadeIn))), transition('* => slideInUp', animate('400ms ease-in', keyframes(slideInUp))), transition('* => slideInDown', animate('400ms ease-in', keyframes(slideInDown))), transition('* => slideInLeft', animate('400ms ease-in', keyframes(slideInLeft))), transition('* => slideInRight', animate('400ms ease-in', keyframes(slideInRight))), transition('* => reset', style({\n    opacity: 1\n  })), state('noneOut', style({\n    opacity: 0\n  })), state('fadeOut', style({\n    opacity: 0\n  })), state('zoomOutWind', style({\n    opacity: 0\n  })), state('bounceOut', style({\n    opacity: 0\n  })), state('flipOutY', style({\n    opacity: 0\n  })), state('zoomOut', style({\n    opacity: 0\n  })), state('zoomOutRotate', style({\n    opacity: 0\n  })), state('slideOutUp', style({\n    opacity: 0\n  })), state('slideOutDown', style({\n    opacity: 0\n  })), state('slideOutLeft', style({\n    opacity: 0\n  })), state('slideOutRight', style({\n    opacity: 0\n  })), transition('* => noneOut', animate('100ms ease-out', keyframes(fadeOut))), transition('* => fadeOut', animate('300ms ease-out', keyframes(fadeOut))), transition('* => zoomOutWind', animate('400ms ease-out', keyframes(zoomOutWind))), transition('* => bounceOut', animate('400ms ease-out', keyframes(bounceOut))), transition('* => flipOutY', animate('400ms ease-out', keyframes(flipOutY))), transition('* => zoomOut', animate('400ms ease-out', keyframes(zoomOut))), transition('* => zoomOutRotate', animate('400ms ease-out', keyframes(zoomOutRotate))), transition('* => slideOutUp', animate('300ms ease-out', keyframes(slideOutUp))), transition('* => slideOutDown', animate('300ms ease-out', keyframes(slideOutDown))), transition('* => slideOutLeft', animate('300ms ease-out', keyframes(slideOutLeft))), transition('* => slideOutRight', animate('300ms ease-out', keyframes(slideOutRight))), transition('* => wobble', animate(1000, keyframes(wobble)))]);\n}\n\nfunction fadeInOut() {\n  return trigger('fadeInOut', [state('open', style({\n    opacity: 1\n  })), state('close-fast', style({\n    opacity: 0\n  })), state('close-instant', style({\n    opacity: 0\n  })), transition('* => close-fast', [query('*', [animateChild()]), animate('{{closeDelay}}')]), transition('* => open', [animate(100)]), transition('* => close-instant', [animate(0)])]);\n}\n\nlet LayoutHelperService = /*#__PURE__*/(() => {\n  class LayoutHelperService {\n    getIconClasses(layoutType, iconStyleClass) {\n      let returnString = '';\n\n      if (iconStyleClass) {\n        returnString += iconStyleClass;\n        return returnString;\n      }\n\n      switch (layoutType) {\n        case DialogLayoutDisplay.SUCCESS:\n          {\n            returnString += 'ap-icon-success icon-check-circle';\n            break;\n          }\n\n        case DialogLayoutDisplay.INFO:\n          {\n            returnString += 'ap-icon-info icon-info-circle';\n            break;\n          }\n\n        case DialogLayoutDisplay.WARNING:\n          {\n            returnString += 'ap-icon-warning icon-warning';\n            break;\n          }\n\n        case DialogLayoutDisplay.DANGER:\n          {\n            returnString += 'ap-icon-danger icon-times-circle';\n            break;\n          }\n      }\n\n      return returnString;\n    }\n\n    getButtonClasses(layoutType, perm = '', type) {\n      let returnString = perm + ' ';\n\n      if (type === 'auto-button' && layoutType === DialogLayoutDisplay.NONE) {\n        layoutType = ButtonLayoutDisplay.PRIMARY;\n      }\n\n      switch (layoutType) {\n        case ButtonLayoutDisplay.SUCCESS:\n          {\n            returnString += 'ed-btn-success';\n            break;\n          }\n\n        case ButtonLayoutDisplay.INFO:\n          {\n            returnString += 'ed-btn-info';\n            break;\n          }\n\n        case ButtonLayoutDisplay.WARNING:\n          {\n            returnString += 'ed-btn-warning';\n            break;\n          }\n\n        case ButtonLayoutDisplay.DANGER:\n          {\n            returnString += 'ed-btn-danger';\n            break;\n          }\n\n        case ButtonLayoutDisplay.DARK:\n          {\n            returnString += 'ed-btn-dark';\n            break;\n          }\n\n        case ButtonLayoutDisplay.LIGHT:\n          {\n            returnString += 'ed-btn-light';\n            break;\n          }\n\n        case ButtonLayoutDisplay.PRIMARY:\n          {\n            returnString += 'ed-btn-primary';\n            break;\n          }\n\n        case ButtonLayoutDisplay.SECONDARY:\n          {\n            returnString += 'ed-btn-secondary';\n            break;\n          }\n\n        case ButtonLayoutDisplay.LINK:\n          {\n            returnString += 'ed-btn-link';\n            break;\n          }\n\n        case ButtonLayoutDisplay.CUSTOM_ONE:\n          {\n            returnString += 'ed-btn-customone';\n            break;\n          }\n\n        case ButtonLayoutDisplay.CUSTOM_TWO:\n          {\n            returnString += 'ed-btn-customtwo';\n            break;\n          }\n\n        case ButtonLayoutDisplay.CUSTOM_THREE:\n          {\n            returnString += 'ed-btn-customthree';\n            break;\n          }\n\n        case ButtonLayoutDisplay.CUSTOM_FOUR:\n          {\n            returnString += 'ed-btn-customfour';\n            break;\n          }\n\n        case ButtonLayoutDisplay.CUSTOM_FIVE:\n          {\n            returnString += 'ed-btn-customfive';\n            break;\n          }\n      }\n\n      return returnString;\n    }\n\n    getBoxClasses(layoutType, perm = '') {\n      let returnString = perm + ' ';\n\n      switch (layoutType) {\n        case DialogLayoutDisplay.NONE:\n          {\n            returnString += 'standard-dialog';\n            break;\n          }\n\n        case DialogLayoutDisplay.SUCCESS:\n          {\n            returnString += 'success-dialog';\n            break;\n          }\n\n        case DialogLayoutDisplay.INFO:\n          {\n            returnString += 'info-dialog';\n            break;\n          }\n\n        case DialogLayoutDisplay.WARNING:\n          {\n            returnString += 'warning-dialog';\n            break;\n          }\n\n        case DialogLayoutDisplay.DANGER:\n          {\n            returnString += 'danger-dialog';\n            break;\n          }\n\n        case DialogLayoutDisplay.CUSTOM_ONE:\n          {\n            returnString += 'customone-dialog';\n            break;\n          }\n\n        case DialogLayoutDisplay.CUSTOM_TWO:\n          {\n            returnString += 'customtwo-dialog';\n            break;\n          }\n\n        case DialogLayoutDisplay.CUSTOM_THREE:\n          {\n            returnString += 'customthree-dialog';\n            break;\n          }\n\n        case DialogLayoutDisplay.CUSTOM_FOUR:\n          {\n            returnString += 'customfour-dialog';\n            break;\n          }\n\n        case DialogLayoutDisplay.CUSTOM_FIVE:\n          {\n            returnString += 'customfive-dialog';\n            break;\n          }\n      }\n\n      return returnString;\n    }\n\n  }\n\n  LayoutHelperService.ɵfac = function LayoutHelperService_Factory(t) {\n    return new (t || LayoutHelperService)();\n  };\n\n  LayoutHelperService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: LayoutHelperService,\n    factory: LayoutHelperService.ɵfac,\n    providedIn: 'root'\n  });\n  return LayoutHelperService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ConfirmBoxWrapperComponent = /*#__PURE__*/(() => {\n  class ConfirmBoxWrapperComponent {\n    constructor(confirmBoxBelonging, cd, layoutHelper) {\n      this.confirmBoxBelonging = confirmBoxBelonging;\n      this.cd = cd;\n      this.layoutHelper = layoutHelper;\n      this.fadeInOutAnimation = 'open';\n      this.appearanceAnimation = AppearanceAnimation;\n      this.disappearanceAnimation = DisappearanceAnimation;\n      setTimeout(() => {\n        this.boxAnimation = this.confirmBoxBelonging.confirmBoxCoreConfig.animationIn;\n      }, 1);\n    }\n\n    ngAfterViewInit() {\n      this.setResponse(false);\n      this.cd.detectChanges();\n      this.setCustomStyles();\n    }\n\n    setResponse(_IsSuccess, _ClickedButtonID) {\n      const response = new ConfirmBoxDefaultResponse();\n\n      if (_ClickedButtonID) {\n        response.clickedButtonID = _ClickedButtonID;\n      }\n\n      response.setSuccess(_IsSuccess);\n      response.setBelonging(this.confirmBoxBelonging);\n      this.confirmBoxBelonging.eventsController.setDefaultResponse(response);\n    }\n\n    onOverlayClicked(evt) {}\n\n    onCustomButton(_Button) {\n      this.confirmBoxBelonging.eventsController.onButtonClick(_Button);\n      this.setResponse(true, _Button.ID);\n      this.confirmBoxBelonging.eventsController.close();\n    }\n\n    onButtonClick(_Type) {\n      let buttonID;\n\n      if (_Type === 'confirm') {\n        buttonID = this.confirmBoxBelonging.confirmBoxCoreConfig.confirmLabel.toLowerCase();\n      } else if (_Type === 'decline') {\n        buttonID = this.confirmBoxBelonging.confirmBoxCoreConfig.declineLabel.toLowerCase();\n      }\n\n      this.setResponse(_Type === 'confirm', buttonID);\n      this.confirmBoxBelonging.eventsController.close();\n    }\n\n    closeParent$() {\n      this.boxAnimation = this.confirmBoxBelonging.confirmBoxCoreConfig.animationOut;\n      const closeDuration = this.confirmBoxBelonging.confirmBoxCoreConfig.animationOut ? 800 : 200;\n      this.fadeInOutAnimation = 'close-fast';\n      return new Observable(observer => {\n        observer.next('');\n        observer.complete();\n      }).pipe(delay(closeDuration));\n    }\n\n    setCustomStyles() {\n      if (this.confirmBoxBelonging.confirmBoxCoreConfig.customStyles.wrapperCSS && this.elConfirmBoxWrapper) {\n        this.elConfirmBoxWrapper.nativeElement.style.cssText += this.confirmBoxBelonging.confirmBoxCoreConfig.customStyles.wrapperCSS;\n      }\n\n      if (this.confirmBoxBelonging.confirmBoxCoreConfig.customStyles.textCSS && this.elTextWrapper) {\n        this.elTextWrapper.nativeElement.style.cssText += this.confirmBoxBelonging.confirmBoxCoreConfig.customStyles.textCSS;\n      }\n\n      if (this.confirmBoxBelonging.confirmBoxCoreConfig.customStyles.titleCSS && this.elTitleWrapper) {\n        this.elTitleWrapper.nativeElement.style.cssText += this.confirmBoxBelonging.confirmBoxCoreConfig.customStyles.titleCSS;\n      }\n\n      if (this.confirmBoxBelonging.confirmBoxCoreConfig.customStyles.buttonSectionCSS && this.elButtonWrapper) {\n        this.elButtonWrapper.nativeElement.style.cssText += this.confirmBoxBelonging.confirmBoxCoreConfig.customStyles.buttonSectionCSS;\n      }\n\n      if (this.confirmBoxBelonging.confirmBoxCoreConfig.customStyles.buttonCSS && this.elButton) {\n        this.elButton.forEach(el => {\n          el.nativeElement.style.cssText += this.confirmBoxBelonging.confirmBoxCoreConfig.customStyles.buttonCSS;\n        });\n      }\n    }\n\n    getIconClasses() {\n      return 'icon-type-confirm-box  ' + this.layoutHelper.getIconClasses(this.confirmBoxBelonging.confirmBoxCoreConfig.layoutType, this.confirmBoxBelonging.confirmBoxCoreConfig.iconStyleClass);\n    }\n\n    getButtonClasses(layoutType) {\n      return this.layoutHelper.getButtonClasses(layoutType);\n    }\n\n  }\n\n  ConfirmBoxWrapperComponent.ɵfac = function ConfirmBoxWrapperComponent_Factory(t) {\n    return new (t || ConfirmBoxWrapperComponent)(i0.ɵɵdirectiveInject('confirmBoxBelonging'), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(LayoutHelperService));\n  };\n\n  ConfirmBoxWrapperComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ConfirmBoxWrapperComponent,\n    selectors: [[\"app-confirm-box-wrapper\"]],\n    viewQuery: function ConfirmBoxWrapperComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elConfirmBoxWrapper = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elTextWrapper = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elTitleWrapper = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elButtonWrapper = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elButton = _t);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([LayoutHelperService])],\n    decls: 9,\n    vars: 18,\n    consts: [[1, \"ngx-awesome-popup-overlay\", \"confirm-box-overlay\", 3, \"dblclick\"], [3, \"className\", \"ngStyle\"], [\"elConfirmBoxWrapper\", \"\"], [\"class\", \"confirm-box-title-content\", 4, \"ngIf\"], [\"class\", \"content-holder\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"button-holder\"], [\"elButtonWrapper\", \"\"], [\"class\", \"button-section\", 3, \"ngStyle\", 4, \"ngIf\"], [1, \"confirm-box-title-content\"], [\"elTitleWrapper\", \"\"], [1, \"dont-break-out\"], [1, \"text-wrapper\", \"dont-break-out\"], [1, \"confirm-box-title-text\"], [1, \"content-holder\", 3, \"ngClass\"], [\"elTextWrapper\", \"\"], [\"class\", \"icon-section\", 4, \"ngIf\"], [1, \"text-wrapper-section\", \"confirm-box-inner-content\"], [1, \"text-wrapper\", 3, \"innerHTML\"], [1, \"icon-section\"], [3, \"className\"], [1, \"button-section\", 3, \"ngStyle\"], [3, \"disabled\", \"display\", \"className\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"disabled\", \"className\", \"click\"], [\"elButton\", \"\"], [1, \"ed-btn\", \"ed-btn-md\", 3, \"className\", \"click\"], [\"class\", \"ed-btn ed-btn-md ed-btn-secondary\", 3, \"click\", 4, \"ngIf\"], [1, \"ed-btn\", \"ed-btn-md\", \"ed-btn-secondary\", 3, \"click\"]],\n    template: function ConfirmBoxWrapperComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"dblclick\", function ConfirmBoxWrapperComponent_Template_div_dblclick_0_listener($event) {\n          return ctx.onOverlayClicked($event);\n        });\n        i0.ɵɵelementStart(1, \"div\", 1, 2);\n        i0.ɵɵtemplate(3, ConfirmBoxWrapperComponent_div_3_Template, 6, 1, \"div\", 3);\n        i0.ɵɵtemplate(4, ConfirmBoxWrapperComponent_div_4_Template, 6, 3, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5, 6);\n        i0.ɵɵtemplate(7, ConfirmBoxWrapperComponent_div_7_Template, 2, 4, \"div\", 7);\n        i0.ɵɵtemplate(8, ConfirmBoxWrapperComponent_div_8_Template, 5, 6, \"div\", 7);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"@fadeInOut\", i0.ɵɵpureFunction2(11, _c7, ctx.fadeInOutAnimation, i0.ɵɵpureFunction1(9, _c6, ctx.confirmBoxBelonging.confirmBoxCoreConfig.animationOut === ctx.disappearanceAnimation.NONE ? \"200ms\" : \"300ms\")));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"@.disabled\", ctx.confirmBoxBelonging.confirmBoxCoreConfig.animationIn === ctx.appearanceAnimation.NONE && ctx.confirmBoxBelonging.confirmBoxCoreConfig.animationOut === ctx.disappearanceAnimation.NONE)(\"@boxAnimations\", ctx.boxAnimation)(\"className\", ctx.layoutHelper.getBoxClasses(ctx.confirmBoxBelonging.confirmBoxCoreConfig.layoutType, \"evolve-confirm-box\"))(\"ngStyle\", i0.ɵɵpureFunction3(14, _c8, ctx.confirmBoxBelonging.confirmBoxCoreConfig.width, ctx.confirmBoxBelonging.confirmBoxCoreConfig.height, ctx.confirmBoxBelonging.confirmBoxCoreConfig.animationIn === ctx.appearanceAnimation.NONE ? 1 : 0));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.confirmBoxBelonging.dispatch.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.confirmBoxBelonging.dispatch.message);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.confirmBoxBelonging.buttons.length);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.confirmBoxBelonging.buttons.length);\n      }\n    },\n    dependencies: [i2.NgStyle, i2.NgIf, i2.NgClass, i2.NgForOf],\n    encapsulation: 2,\n    data: {\n      animation: [fadeInOut(), boxAnimations()]\n    }\n  });\n  return ConfirmBoxWrapperComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass ResetGlobalConfig {\n  constructor(globalConfig) {\n    const globalConfigService = ServiceLocator.injector.get(GlobalConfigService);\n\n    if (globalConfig) {\n      globalConfigService.setUserColors(globalConfig.colorList);\n      globalConfigService.setNodeStyles(globalConfigService.productionGlobalConfig.displayColor, true);\n    } else {\n      globalConfigService.resetStyles();\n    }\n  }\n\n}\n\nlet GlobalConfigService = /*#__PURE__*/(() => {\n  class GlobalConfigService {\n    constructor(userGlobalConfig) {\n      this.userGlobalConfig = userGlobalConfig;\n      this.authorGlobalConfig = new GlobalConfig();\n      this.productionGlobalConfig = new GlobalConfig();\n      this.userGeneratedConfig = new GlobalUserConfig(userGlobalConfig);\n      this.authorGlobalConfig.displayColor.primary = null;\n      this.authorGlobalConfig.displayColor.secondary = null;\n      this.authorGlobalConfig.displayColor.success = null;\n      this.authorGlobalConfig.displayColor.info = null;\n      this.authorGlobalConfig.displayColor.warning = null;\n      this.authorGlobalConfig.displayColor.danger = null;\n      this.authorGlobalConfig.displayColor.light = null;\n      this.authorGlobalConfig.displayColor.dark = null;\n      this.authorGlobalConfig.displayColor.customOne = null;\n      this.authorGlobalConfig.displayColor.customTwo = null;\n      this.authorGlobalConfig.displayColor.customThree = null;\n      this.authorGlobalConfig.displayColor.customFour = null;\n      this.authorGlobalConfig.displayColor.customFive = null;\n      this.productionGlobalConfig.displayColor = this.authorGlobalConfig.displayColor;\n      this.setUserColors(this.userGeneratedConfig.colorList);\n      this.setNodeStyles(this.productionGlobalConfig.displayColor);\n    }\n\n    resetStyles() {\n      this.setUserColors(this.userGeneratedConfig.colorList);\n      this.setNodeStyles(this.productionGlobalConfig.displayColor, true);\n    }\n\n    setNodeStyles(_ProductionColorTypes, _Reset = false) {\n      if (_Reset) {\n        const evolveDialogStyleNode = document.getElementById('ngx-awesome-popup-glob-styles');\n\n        if (evolveDialogStyleNode) {\n          evolveDialogStyleNode.remove();\n        }\n      }\n\n      this.setToastStyles();\n      Object.keys(_ProductionColorTypes).forEach(key => {\n        if (_ProductionColorTypes[key]) {\n          this.setButtonStyling(key, _ProductionColorTypes[key]);\n          this.setIconStyling(key, _ProductionColorTypes[key]);\n          this.setToastStyling(key, _ProductionColorTypes[key]);\n          this.setDialogFrame(key, _ProductionColorTypes[key]);\n\n          if (ColorVariance[key.toUpperCase()] === ColorVariance.PRIMARY) {\n            this.getSheet('ngx-awesome-popup-styles').addRule('.ngx-awesome-popup-overlay', `background:  ${_ProductionColorTypes[key].TransparentDarkenVariance}!important;`);\n          }\n        }\n      });\n    }\n\n    setUserColors(_UserColorTypes) {\n      if (typeof _UserColorTypes !== 'object') {\n        return;\n      }\n\n      const userKeys = Object.keys(_UserColorTypes);\n      const productionObjectKeys = Object.keys(this.productionGlobalConfig.displayColor);\n      userKeys.forEach(key => {\n        if (productionObjectKeys.find(tKey => tKey === key)) {\n          if (_UserColorTypes[key]) {\n            const baseColorProvider = new ColorProvider(_UserColorTypes[key]);\n\n            if (baseColorProvider.Base) {\n              this.productionGlobalConfig.displayColor[key] = baseColorProvider;\n            }\n          } else {\n            this.productionGlobalConfig.displayColor[key] = null;\n          }\n        }\n      });\n    }\n\n    getSheet(_StyleID) {\n      let evolveDialogStyleNode = document.getElementById(_StyleID);\n\n      if (!evolveDialogStyleNode) {\n        const headNode = document.head || document.getElementsByTagName('head')[0];\n\n        if (!headNode) {\n          return;\n        }\n\n        evolveDialogStyleNode = document.createElement('style');\n        evolveDialogStyleNode.setAttribute('id', _StyleID);\n        evolveDialogStyleNode.appendChild(document.createTextNode(''));\n        headNode.appendChild(evolveDialogStyleNode);\n      }\n\n      return evolveDialogStyleNode ? evolveDialogStyleNode.sheet : null;\n    }\n\n    setToastStyling(_Key, _ColorProvider) {\n      const standardToast = `.toast-wrapper.standard-toast .evolve-toast.${_Key.toLowerCase()}-dialog`;\n      const standardToastStyle = `\n        background:  ${_ColorProvider.BrightShade}!important;\n        border-color: ${_ColorProvider.Brighten}!important;\n        `;\n      const simpleToast = `.toast-wrapper.simple-toast .evolve-toast.${_Key.toLowerCase()}-dialog`;\n      const simpleToastStyle = `\n        background:  ${_ColorProvider.BrightWarmly}!important;\n        color:  ${_ColorProvider.Darken}!important;\n        `;\n      const baseProgress = `.toast-wrapper .evolve-toast.${_Key.toLowerCase()}-dialog .progress-bar`;\n      const baseProgressStyle = `\n        background-color:  ${_ColorProvider.Brighten}!important;\n        `;\n      this.getSheet('ngx-awesome-popup-glob-styles').addRule(baseProgress, baseProgressStyle);\n      this.getSheet('ngx-awesome-popup-glob-styles').addRule(standardToast, standardToastStyle);\n      this.getSheet('ngx-awesome-popup-glob-styles').addRule(simpleToast, simpleToastStyle);\n    }\n\n    setButtonStyling(_Key, _ColorProvider) {\n      const baseButtonClass = `.ed-btn-${_Key.toLowerCase()}`;\n      const baseStyle = `\n        color: ${_ColorProvider.ContrastColor}!important;\n        background:  ${_ColorProvider.Base}!important;\n        border-color: ${_ColorProvider.BrightenForShade}!important;\n        `;\n      const hoverButtonClass = `.ed-btn-${_Key.toLowerCase()}:hover`;\n      const hoverStyle = `\n        background:  ${_ColorProvider.IsBaseBright ? _ColorProvider.DarkenForShade : _ColorProvider.BrightenForShade}!important;\n        border-color: ${_ColorProvider.IsBaseBright ? _ColorProvider.Darken : _ColorProvider.Brighten}!important;\n        `;\n      const focusActiveButtonClass = `.ed-btn-${_Key.toLowerCase()}:focus, .ed-btn-${_Key.toLowerCase()}:active`;\n      const focusActiveStyle = `\n        box-shadow: 0 0 1px 2px ${_ColorProvider.IsBaseBright ? _ColorProvider.Darken : _ColorProvider.Brighten}!important;\n        `;\n      this.getSheet('ngx-awesome-popup-glob-styles').addRule(baseButtonClass, baseStyle);\n      this.getSheet('ngx-awesome-popup-glob-styles').addRule(hoverButtonClass, hoverStyle);\n      this.getSheet('ngx-awesome-popup-glob-styles').addRule(focusActiveButtonClass, focusActiveStyle);\n    }\n\n    setIconStyling(_Key, _ColorProvider) {\n      const baseIconClass = `.ap-icon-${_Key.toLowerCase()}`;\n      const baseStyle = `color: ${_ColorProvider.BrightenForShade}!important;`;\n      this.getSheet('ngx-awesome-popup-glob-styles').addRule(baseIconClass, baseStyle);\n    }\n\n    setDialogFrame(_Key, _ColorProvider) {\n      const baseDialogFrameClass = `.ngx-awesome-popup-overlay .${_Key.toLowerCase()}-dialog`;\n      const baseStyle = `\n        border-color: ${_ColorProvider.Brighten}!important;\n        `;\n      this.getSheet('ngx-awesome-popup-glob-styles').addRule(baseDialogFrameClass, baseStyle);\n    }\n\n    setToastStyles() {\n      this.getSheet('ngx-awesome-popup-styles').addRule(`.toast-entity`, `all 0.5s ease;`);\n      this.getSheet('ngx-awesome-popup-styles').addRule(`.toast-entity:first-child`, `animation: move 0.7s ease-out;`);\n      const isIEOrEdge = /msie\\s|trident\\//i.test(window.navigator.userAgent);\n\n      if (!isIEOrEdge) {\n        this.getSheet('ngx-awesome-popup-styles').addRule(`@-webkit-keyframes move`, `\n                                        0% {margin-top: -5px; opacity: 0.4;}\n                                        30% {margin-top: -4px; opacity: 0.7;}\n                                        100% {margin-top: 0px; opacity: 1;}\n                                        `);\n        this.getSheet('ngx-awesome-popup-styles').addRule(`@keyframes move`, `\n                                        0% {margin-top: -5px; opacity: 0.4;}\n                                        30% {margin-top: -4px; opacity: 0.7;}\n                                        100% {margin-top: 0px; opacity: 1;}\n                                        `);\n      }\n    }\n\n  }\n\n  GlobalConfigService.ɵfac = function GlobalConfigService_Factory(t) {\n    return new (t || GlobalConfigService)(i0.ɵɵinject('cdGlobalConfig'));\n  };\n\n  GlobalConfigService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: GlobalConfigService,\n    factory: GlobalConfigService.ɵfac,\n    providedIn: 'root'\n  });\n  return GlobalConfigService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ConfirmBoxService = /*#__PURE__*/(() => {\n  class ConfirmBoxService {\n    constructor(componentFactoryResolver, injector, appRef, gConfigService) {\n      this.componentFactoryResolver = componentFactoryResolver;\n      this.injector = injector;\n      this.appRef = appRef;\n      this.gConfigService = gConfigService;\n      this.confirmBoxComponentRefList = [];\n    }\n\n    open(_ConfirmBoxBelonging) {\n      const dialogController = _ConfirmBoxBelonging.eventsController;\n      const componentRef = this.getComponentRef(dialogController, _ConfirmBoxBelonging);\n      this.confirmBoxComponentRefList.push(componentRef);\n      componentRef.instance.confirmBoxBelonging = _ConfirmBoxBelonging;\n      this.appendToBodyParentComponent(componentRef);\n      this.listeners(dialogController);\n      return dialogController;\n    }\n\n    getComponentRef(_eventsController, _ConfirmBoxBelonging) {\n      let componentFactory;\n      const dialogIndex = this.findDialogIndex(_ConfirmBoxBelonging.entityUniqueID);\n\n      if (dialogIndex === -1) {\n        const weakMap = new WeakMap();\n        weakMap.set(ConfirmBoxeventsController, _eventsController);\n        componentFactory = this.componentFactoryResolver.resolveComponentFactory(ConfirmBoxWrapperComponent);\n        return componentFactory.create(new DialogInjector(this.injector, weakMap));\n      }\n\n      return null;\n    }\n\n    listeners(_eventsController) {\n      const closeDialogSubscription = _eventsController.afterClosed$.subscribe(response => {\n        const modalIndex = this.findDialogIndex(response.confirmBoxBelonging.entityUniqueID);\n        this.removeFromBodyParentComponent(modalIndex);\n        closeDialogSubscription.unsubscribe();\n      });\n    }\n\n    appendToBodyParentComponent(_ComponentRef) {\n      this.appRef.attachView(_ComponentRef.hostView);\n      const domElem = _ComponentRef.hostView.rootNodes[0];\n      document.body.appendChild(domElem);\n    }\n\n    closeDialogWrapperComponent(_DialogUniqueID) {\n      const modalIndex = this.findDialogIndex(_DialogUniqueID);\n      this.removeFromBodyParentComponent(modalIndex);\n    }\n\n    removeFromBodyParentComponent(_DialogIndex) {\n      if (_DialogIndex > -1) {\n        this.confirmBoxComponentRefList[_DialogIndex].instance.closeParent$().pipe(tap(item => {\n          this.appRef.detachView(this.confirmBoxComponentRefList[_DialogIndex].hostView);\n\n          this.confirmBoxComponentRefList[_DialogIndex].destroy();\n\n          this.confirmBoxComponentRefList.splice(_DialogIndex, 1);\n        }), take(1)).subscribe();\n      }\n    }\n\n    findDialogIndex(_DialogUniqueID) {\n      return this.confirmBoxComponentRefList.findIndex(item => {\n        return _DialogUniqueID === item.instance.confirmBoxBelonging.entityUniqueID;\n      });\n    }\n\n  }\n\n  ConfirmBoxService.ɵfac = function ConfirmBoxService_Factory(t) {\n    return new (t || ConfirmBoxService)(i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(GlobalConfigService));\n  };\n\n  ConfirmBoxService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ConfirmBoxService,\n    factory: ConfirmBoxService.ɵfac,\n    providedIn: 'root'\n  });\n  return ConfirmBoxService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass ConfirmBoxInitializer {\n  constructor() {\n    this.confirmBoxCarrier = new ConfirmBoxCarrier();\n  }\n\n  openConfirmBox$() {\n    return this.confirmBoxCarrier.openConfirmBox$().pipe(map(resp => {\n      const basicConfirmBoxResponse = new ConfirmBoxResponse();\n      const dataControl = new DataControl();\n      dataControl.copyValuesFrom(resp, basicConfirmBoxResponse);\n      return basicConfirmBoxResponse;\n    }), take(1));\n  }\n\n  setButtons(_Buttons) {\n    this.confirmBoxCarrier.setButtons(_Buttons);\n  }\n\n  setConfig(_ConfirmBoxCoreConfig) {\n    this.confirmBoxCarrier.setConfig(_ConfirmBoxCoreConfig);\n  }\n\n  setDispatch(_Title, _Message = null) {\n    this.confirmBoxCarrier.setTitle(_Title);\n    this.confirmBoxCarrier.setMessage(_Message);\n  }\n\n  setTitle(_Title) {\n    this.confirmBoxCarrier.setTitle(_Title);\n  }\n\n  setMessage(_Message) {\n    this.confirmBoxCarrier.setMessage(_Message);\n  }\n\n  setButtonLabels(_Confirm, _Decline) {\n    this.confirmBoxCarrier.setButtonLabels(_Confirm, _Decline);\n  }\n\n}\n\nclass ConfirmBoxResponse extends DataControl {\n  constructor() {\n    super();\n    this.success = null;\n    this.clickedButtonID = null;\n  }\n\n  setSuccess(_IsSuccess) {\n    this.success = _IsSuccess;\n  }\n\n  setClickedButtonID(_ClickedButtonID) {\n    this.clickedButtonID = _ClickedButtonID;\n  }\n\n}\n\nclass ConfirmBoxeventsController {\n  constructor(entityUniqueID) {\n    this.entityUniqueID = entityUniqueID;\n    this._afterClosed = new Subject();\n    this._onButtonClick = new Subject();\n    this._buttonList = new Subject();\n    this.afterClosed$ = this._afterClosed.asObservable();\n    this.onButtonClick$ = this._onButtonClick.asObservable();\n    this.buttonList$ = this._buttonList.asObservable();\n  }\n\n  close(_Response) {\n    const response = _Response ? _Response : this.defaultResponse;\n\n    this._afterClosed.next(response);\n  }\n\n  onButtonClick(_Button) {\n    this.defaultResponse.setClickedButtonID(_Button.ID);\n\n    this._onButtonClick.next(_Button);\n  }\n\n  setButtonList(_ButtonList) {\n    this._buttonList.next(_ButtonList);\n  }\n\n  setDefaultResponse(_Response) {\n    this.defaultResponse = _Response;\n  }\n\n}\n\nclass ConfirmBoxDefaultResponse extends ConfirmBoxResponse {\n  constructor() {\n    super();\n    this.confirmBoxBelonging = null;\n  }\n\n  setBelonging(_ConfirmBoxBelonging) {\n    this.confirmBoxBelonging = _ConfirmBoxBelonging;\n  }\n\n}\n\nclass ConfirmBoxCarrier {\n  constructor() {\n    this.confirmBoxBelonging = new ConfirmBoxBelonging();\n  }\n\n  setButtons(_Buttons) {\n    if (_Buttons.length) {\n      this.confirmBoxBelonging.buttons = _Buttons;\n    }\n  }\n\n  setTitle(_Title) {\n    this.confirmBoxBelonging.dispatch.title = _Title;\n  }\n\n  setMessage(_Message) {\n    this.confirmBoxBelonging.dispatch.message = _Message;\n  }\n\n  setButtonLabels(_Confirm, _Decline) {\n    this.confirmBoxBelonging.confirmBoxCoreConfig.confirmLabel = _Confirm;\n    this.confirmBoxBelonging.confirmBoxCoreConfig.declineLabel = _Decline;\n  }\n\n  setConfig(_ConfirmBoxBelonging) {\n    const dataControl = new DataControl();\n    dataControl.copyValuesFrom(_ConfirmBoxBelonging, this.confirmBoxBelonging.confirmBoxCoreConfig);\n  }\n\n  openConfirmBox$() {\n    const service = ServiceLocator.injector.get(ConfirmBoxService);\n    const confirmBoxController = service.open(this.confirmBoxBelonging);\n    return confirmBoxController.afterClosed$;\n  }\n\n}\n\nclass ConfirmBoxSettings {\n  constructor() {\n    this.buttons = [];\n    this.confirmBoxCoreConfig = new confirmBoxCoreConfig();\n    this.dispatch = new dispatch();\n  }\n\n}\n\nclass ConfirmBoxCustomStyles {\n  constructor() {\n    this.titleCSS = null;\n    this.textCSS = null;\n    this.buttonSectionCSS = null;\n    this.buttonCSS = null;\n    this.wrapperCSS = null;\n  }\n\n}\n\nclass confirmBoxCoreConfig {\n  constructor() {\n    this.width = null;\n    this.height = null;\n    this.buttonPosition = null;\n    this.layoutType = null;\n    this.dispatch = null;\n    this.confirmLabel = null;\n    this.declineLabel = null;\n    this.disableIcon = null;\n    this.allowHtmlMessage = null;\n    this.animationIn = null;\n    this.animationOut = null;\n    this.customStyles = new ConfirmBoxCustomStyles();\n    this.iconStyleClass = null;\n  }\n\n}\n\nclass ConfirmBoxBelonging extends ConfirmBoxSettings {\n  constructor() {\n    super();\n    this.entityUniqueID = 'C' + Math.random().toString(36).substr(2, 9);\n    this.eventsController = new ConfirmBoxeventsController(this.entityUniqueID);\n    const ConfirmBoxCoreConfigurator = ServiceLocator.injector.get(ConfirmBoxConfigService);\n    const baseSettings = new ConfirmBoxSettings();\n    const dataControl = new DataControl();\n    dataControl.copyValuesFrom(ConfirmBoxCoreConfigurator.productionConfig.confirmBoxCoreConfig, baseSettings.confirmBoxCoreConfig);\n    this.confirmBoxCoreConfig = baseSettings.confirmBoxCoreConfig;\n    this.buttons = ConfirmBoxCoreConfigurator.productionConfig.buttons.slice();\n  }\n\n}\n\nlet DefaultLoaderComponent = /*#__PURE__*/(() => {\n  class DefaultLoaderComponent {}\n\n  DefaultLoaderComponent.ɵfac = function DefaultLoaderComponent_Factory(t) {\n    return new (t || DefaultLoaderComponent)();\n  };\n\n  DefaultLoaderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DefaultLoaderComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 7,\n    vars: 0,\n    consts: [[1, \"box-position\"], [1, \"loader-center\"], [1, \"lds-ring\"]],\n    template: function DefaultLoaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"div\")(4, \"div\")(5, \"div\")(6, \"div\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    styles: [\".box-position[_ngcontent-%COMP%]{height:auto;left:50%;margin:0 auto;position:absolute;text-align:center;top:44%;transform:translate(-50%,-40%)}.box-position[_ngcontent-%COMP%]   .loader-center[_ngcontent-%COMP%]{align-items:center;display:flex;justify-content:center}.box-position[_ngcontent-%COMP%]   .loader-center[_ngcontent-%COMP%]   .lds-ring[_ngcontent-%COMP%]{display:inline-block;height:80px;position:relative;width:80px}.box-position[_ngcontent-%COMP%]   .loader-center[_ngcontent-%COMP%]   .lds-ring[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{animation:lds-ring 1.2s cubic-bezier(.5,0,.5,1) infinite;border:8px solid;border-color:#d4d4d4 transparent transparent transparent;border-radius:50%;box-sizing:border-box;display:block;height:64px;margin:8px;position:absolute;width:64px}.box-position[_ngcontent-%COMP%]   .loader-center[_ngcontent-%COMP%]   .lds-ring[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(1){animation-delay:-.45s}.box-position[_ngcontent-%COMP%]   .loader-center[_ngcontent-%COMP%]   .lds-ring[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(2){animation-delay:-.3s}.box-position[_ngcontent-%COMP%]   .loader-center[_ngcontent-%COMP%]   .lds-ring[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:nth-child(3){animation-delay:-.15s}@keyframes lds-ring{0%{transform:rotate(0)}to{transform:rotate(360deg)}}\"]\n  });\n  return DefaultLoaderComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DialogConfigService = /*#__PURE__*/(() => {\n  class DialogConfigService {\n    constructor(userConfig = {}, gConfigService) {\n      this.userConfig = userConfig;\n      this.gConfigService = gConfigService;\n      this.authorConfig = new DialogSettings();\n      this.productionConfig = new DialogSettings();\n      const userConfigBase = new DialogSettings();\n      const dataControl = new DataControl();\n      dataControl.copyValuesFrom(userConfig.dialogCoreConfig, userConfigBase.dialogCoreConfig);\n      userConfig.dialogCoreConfig = userConfigBase.dialogCoreConfig;\n\n      if (userConfig.dialogCoreConfig.loaderComponent !== null) {\n        userConfig.dialogCoreConfig.displayLoader = userConfig.dialogCoreConfig.displayLoader === null;\n      }\n\n      this.authorConfig.dialogCoreConfig.width = 'auto';\n      this.authorConfig.dialogCoreConfig.height = 'auto';\n      this.authorConfig.dialogCoreConfig.hideScrollbar = false;\n      this.authorConfig.dialogCoreConfig.escapeKeyClose = false;\n      this.authorConfig.dialogCoreConfig.buttonPosition = 'right';\n      this.authorConfig.dialogCoreConfig.displayLoader = false;\n      this.authorConfig.dialogCoreConfig.fullScreen = false;\n      this.authorConfig.dialogCoreConfig.layoutType = DialogLayoutDisplay.NONE;\n      this.authorConfig.dialogCoreConfig.loaderComponent = DefaultLoaderComponent;\n      this.authorConfig.dialogCoreConfig.animationIn = AppearanceAnimation.ZOOM_IN;\n      this.authorConfig.dialogCoreConfig.animationOut = DisappearanceAnimation.ZOOM_OUT;\n      this.authorConfig.dialogCoreConfig.customStyles = new DialogCustomStyles();\n      dataControl.copyValuesFrom(this.authorConfig.dialogCoreConfig, this.productionConfig.dialogCoreConfig);\n      dataControl.copyValuesFrom(userConfig.dialogCoreConfig, this.productionConfig.dialogCoreConfig);\n    }\n\n  }\n\n  DialogConfigService.ɵfac = function DialogConfigService_Factory(t) {\n    return new (t || DialogConfigService)(i0.ɵɵinject('dialogConfig'), i0.ɵɵinject(GlobalConfigService));\n  };\n\n  DialogConfigService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DialogConfigService,\n    factory: DialogConfigService.ɵfac,\n    providedIn: 'root'\n  });\n  return DialogConfigService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet InsertionLoaderDirective = /*#__PURE__*/(() => {\n  class InsertionLoaderDirective {\n    constructor(viewContainerRef) {\n      this.viewContainerRef = viewContainerRef;\n    }\n\n  }\n\n  InsertionLoaderDirective.ɵfac = function InsertionLoaderDirective_Factory(t) {\n    return new (t || InsertionLoaderDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  InsertionLoaderDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: InsertionLoaderDirective,\n    selectors: [[\"\", \"appInsertionLoader\", \"\"]]\n  });\n  return InsertionLoaderDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet InsertionDirective = /*#__PURE__*/(() => {\n  class InsertionDirective {\n    constructor(viewContainerRef) {\n      this.viewContainerRef = viewContainerRef;\n    }\n\n  }\n\n  InsertionDirective.ɵfac = function InsertionDirective_Factory(t) {\n    return new (t || InsertionDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  InsertionDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: InsertionDirective,\n    selectors: [[\"\", \"appInsertion\", \"\"]]\n  });\n  return InsertionDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DialogWrapperComponent = /*#__PURE__*/(() => {\n  class DialogWrapperComponent {\n    constructor(dialogBelonging, componentFactoryResolver, cd, layoutHelper) {\n      this.dialogBelonging = dialogBelonging;\n      this.componentFactoryResolver = componentFactoryResolver;\n      this.cd = cd;\n      this.layoutHelper = layoutHelper;\n      this.fadeInOutAnimation = 'open';\n      this.showLoader = true;\n      this.appearanceAnimation = AppearanceAnimation;\n      this.disappearanceAnimation = DisappearanceAnimation;\n      setTimeout(() => {\n        this.boxAnimation = this.dialogBelonging.dialogCoreConfig.animationIn;\n      }, 1);\n    }\n\n    ngAfterViewInit() {\n      this.hideScrollbar();\n      this.loadChildComponent(this.childComponentType);\n      this.loadLoaderComponent(this.dialogBelonging.dialogCoreConfig.loaderComponent);\n      this.setDefaultResponse();\n      this.cd.detectChanges();\n      this.setCustomStyles();\n    }\n\n    hideScrollbar() {\n      if (this.dialogBelonging.dialogCoreConfig.hideScrollbar) {\n        this.bodyOverflow = document.body.style.overflow;\n        document.body.style.overflow = 'hidden';\n      }\n    }\n\n    revertScrollbarSettings() {\n      if (this.dialogBelonging.dialogCoreConfig.hideScrollbar) {\n        document.body.style.overflow = this.bodyOverflow;\n      }\n    }\n\n    setDefaultResponse() {\n      const dialogResponse = new DialogDefaultResponse();\n      dialogResponse.setBelonging(this.dialogBelonging);\n      this.dialogBelonging.eventsController.setDefaultResponse(dialogResponse);\n    }\n\n    ngOnDestroy() {\n      this.revertScrollbarSettings();\n\n      if (this.childComponentRef) {\n        this.childComponentRef.destroy();\n      }\n\n      if (this.loaderComponentRef) {\n        this.loaderComponentRef.destroy();\n      }\n    }\n\n    hideScroller() {}\n\n    loadChildComponent(_ComponentType) {\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(_ComponentType);\n      const viewContainerRef = this.insertionPoint.viewContainerRef;\n      viewContainerRef.clear();\n      this.childComponentRef = viewContainerRef.createComponent(componentFactory);\n      this.childComponentRef.instance.dialogBelonging = this.dialogBelonging;\n    }\n\n    loadLoaderComponent(_LoaderRef) {\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(_LoaderRef);\n      const viewContainerRef = this.loaderInsertionPoint.viewContainerRef;\n      viewContainerRef.clear();\n      this.loaderComponentRef = viewContainerRef.createComponent(componentFactory);\n    }\n\n    close() {\n      this.dialogBelonging.eventsController.close();\n    }\n\n    closeParent$() {\n      this.boxAnimation = this.dialogBelonging.dialogCoreConfig.animationOut;\n      const closeDuration = this.dialogBelonging.dialogCoreConfig.animationOut ? 800 : 200;\n      this.fadeInOutAnimation = 'close-fast';\n      return new Observable(observer => {\n        observer.next('');\n        observer.complete();\n      }).pipe(delay(closeDuration));\n    }\n\n    onOverlayClicked(evt) {}\n\n    onCustomButton(_Button) {\n      this.dialogBelonging.eventsController.onButtonClick(_Button);\n    }\n\n    closeLoader() {\n      this.showLoader = false;\n    }\n\n    setCustomStyles() {\n      if (this.dialogBelonging.dialogCoreConfig.customStyles.wrapperCSS && this.elDialogWrapper) {\n        this.elDialogWrapper.nativeElement.style.cssText += this.dialogBelonging.dialogCoreConfig.customStyles.wrapperCSS;\n      }\n\n      if (this.dialogBelonging.dialogCoreConfig.customStyles.buttonSectionCSS && this.elButtonWrapper) {\n        this.elButtonWrapper.nativeElement.style.cssText += this.dialogBelonging.dialogCoreConfig.customStyles.buttonSectionCSS;\n      }\n\n      if (this.dialogBelonging.dialogCoreConfig.customStyles.buttonCSS && this.elButton) {\n        this.elButton.forEach(el => {\n          el.nativeElement.style.cssText += this.dialogBelonging.dialogCoreConfig.customStyles.buttonCSS;\n        });\n      }\n    }\n\n    keyEvent(event) {\n      if (event.key === 'Escape' && this.dialogBelonging.dialogCoreConfig.escapeKeyClose) {\n        this.close();\n      }\n    }\n\n  }\n\n  DialogWrapperComponent.ɵfac = function DialogWrapperComponent_Factory(t) {\n    return new (t || DialogWrapperComponent)(i0.ɵɵdirectiveInject('dialogBelonging'), i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(LayoutHelperService));\n  };\n\n  DialogWrapperComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DialogWrapperComponent,\n    selectors: [[\"dialog-popup-wrapper\"]],\n    viewQuery: function DialogWrapperComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c9, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(InsertionDirective, 7);\n        i0.ɵɵviewQuery(InsertionLoaderDirective, 7);\n        i0.ɵɵviewQuery(_c4, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elDialogWrapper = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elButtonWrapper = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.insertionPoint = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loaderInsertionPoint = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elButton = _t);\n      }\n    },\n    hostBindings: function DialogWrapperComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keyup\", function DialogWrapperComponent_keyup_HostBindingHandler($event) {\n          return ctx.keyEvent($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([LayoutHelperService])],\n    decls: 15,\n    vars: 25,\n    consts: [[1, \"ngx-awesome-popup-overlay\", \"aw-dialog-modal\", 3, \"dblclick\"], [1, \"evolve-parent-dialog\", 3, \"ngStyle\", \"className\"], [\"elDialogWrapper\", \"\"], [1, \"loader-holder\", 3, \"ngClass\"], [1, \"dialog-loader\"], [\"appInsertionLoader\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [\"fullScreen\", \"\"], [1, \"content-holder\", 3, \"ngStyle\"], [1, \"component-content\", 3, \"ngClass\"], [\"appInsertion\", \"\"], [1, \"button-holder\"], [\"elButtonWrapper\", \"\"], [\"class\", \"button-section\", 3, \"ngStyle\", 4, \"ngIf\"], [1, \"button-section\", 3, \"ngStyle\"], [3, \"disabled\", \"display\", \"className\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"disabled\", \"className\", \"click\"], [\"elButton\", \"\"]],\n    template: function DialogWrapperComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"dblclick\", function DialogWrapperComponent_Template_div_dblclick_0_listener($event) {\n          return ctx.onOverlayClicked($event);\n        });\n        i0.ɵɵelementStart(1, \"div\", 1, 2)(3, \"div\", 3)(4, \"div\", 4);\n        i0.ɵɵtemplate(5, DialogWrapperComponent_ng_template_5_Template, 0, 0, \"ng-template\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(6, DialogWrapperComponent_ng_container_6_Template, 1, 0, \"ng-container\", 6);\n        i0.ɵɵtemplate(7, DialogWrapperComponent_ng_template_7_Template, 0, 0, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"div\", 9);\n        i0.ɵɵtemplate(11, DialogWrapperComponent_ng_template_11_Template, 0, 0, \"ng-template\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 11, 12);\n        i0.ɵɵtemplate(14, DialogWrapperComponent_div_14_Template, 2, 4, \"div\", 13);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        const _r3 = i0.ɵɵreference(8);\n\n        i0.ɵɵproperty(\"@fadeInOut\", i0.ɵɵpureFunction2(13, _c7, ctx.fadeInOutAnimation, i0.ɵɵpureFunction1(11, _c6, ctx.dialogBelonging.dialogCoreConfig.animationOut === ctx.disappearanceAnimation.NONE ? \"200ms\" : \"300ms\")));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"@.disabled\", ctx.dialogBelonging.dialogCoreConfig.animationIn === ctx.appearanceAnimation.NONE && ctx.dialogBelonging.dialogCoreConfig.animationOut === ctx.disappearanceAnimation.NONE)(\"@boxAnimations\", ctx.boxAnimation)(\"ngStyle\", ctx.dialogBelonging.dialogCoreConfig.fullScreen && i0.ɵɵpureFunction0(16, _c10))(\"className\", ctx.layoutHelper.getBoxClasses(ctx.dialogBelonging.dialogCoreConfig.layoutType, \"evolve-parent-dialog\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", !ctx.dialogBelonging.dialogCoreConfig.displayLoader ? \"dialog-loader-off\" : ctx.showLoader ? \"dialog-loader-active\" : \"dialog-loader-gone\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.dialogBelonging.dialogCoreConfig.fullScreen)(\"ngIfElse\", _r3);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngStyle\", ctx.dialogBelonging.dialogCoreConfig.fullScreen ? i0.ɵɵpureFunction0(17, _c11) : i0.ɵɵpureFunction6(18, _c12, ctx.dialogBelonging.dialogCoreConfig.width, ctx.dialogBelonging.dialogCoreConfig.minWidth, ctx.dialogBelonging.dialogCoreConfig.maxWidth, ctx.dialogBelonging.dialogCoreConfig.height, ctx.dialogBelonging.dialogCoreConfig.minHeight, ctx.dialogBelonging.dialogCoreConfig.maxHeight));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", !ctx.dialogBelonging.dialogCoreConfig.displayLoader ? \"component-content-loader-off\" : ctx.showLoader ? \"component-content-preparing\" : \"component-content-ready\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.dialogBelonging.buttons.length > 0);\n      }\n    },\n    dependencies: [i2.NgStyle, i2.NgClass, InsertionLoaderDirective, i2.NgIf, InsertionDirective, i2.NgForOf],\n    encapsulation: 2,\n    data: {\n      animation: [fadeInOut(), boxAnimations()]\n    }\n  });\n  return DialogWrapperComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DialogService = /*#__PURE__*/(() => {\n  class DialogService {\n    constructor(componentFactoryResolver, injector, appRef) {\n      this.componentFactoryResolver = componentFactoryResolver;\n      this.injector = injector;\n      this.appRef = appRef;\n      this.dialogParentComponentRefList = [];\n    }\n\n    open(_ComponentType, _DialogBelonging) {\n      const dialogController = _DialogBelonging.eventsController;\n      const componentRef = this.getComponentRef(dialogController, _DialogBelonging);\n      this.dialogParentComponentRefList.push(componentRef);\n      componentRef.instance.dialogBelonging = _DialogBelonging;\n      componentRef.instance.childComponentType = _ComponentType;\n      this.appendToBodyParentComponent(componentRef);\n      this.listeners(dialogController);\n      return dialogController;\n    }\n\n    getComponentRef(_eventsController, _DialogBelonging) {\n      let componentFactory;\n      const dialogIndex = this.findDialogIndex(_DialogBelonging.entityUniqueID);\n\n      if (dialogIndex === -1) {\n        const weakMap = new WeakMap();\n        weakMap.set(DialogeventsController, _eventsController);\n        componentFactory = this.componentFactoryResolver.resolveComponentFactory(DialogWrapperComponent);\n        return componentFactory.create(new DialogInjector(this.injector, weakMap));\n      }\n\n      return null;\n    }\n\n    listeners(_eventsController) {\n      const closeDialogSubscription = _eventsController.afterClosed$.subscribe(response => {\n        const modalIndex = this.findDialogIndex(response.DialogBelonging.entityUniqueID);\n        this.removeFromBodyDialogWrapperComponent(modalIndex);\n        closeDialogSubscription.unsubscribe();\n      });\n\n      const closeLoaderSubscription = _eventsController.afterLoader$.subscribe(_DialogUniqueID => {\n        if (_DialogUniqueID) {\n          const modalIndex = this.findDialogIndex(_DialogUniqueID);\n\n          if (modalIndex !== -1) {\n            this.dialogParentComponentRefList[modalIndex].instance.closeLoader();\n          }\n        }\n\n        closeLoaderSubscription.unsubscribe();\n      });\n    }\n\n    childComponentResolver() {}\n\n    appendToBodyParentComponent(_ComponentRef) {\n      this.appRef.attachView(_ComponentRef.hostView);\n      const domElem = _ComponentRef.hostView.rootNodes[0];\n      document.body.appendChild(domElem);\n    }\n\n    closeDialogWrapperComponent(_DialogUniqueID) {\n      const modalIndex = this.findDialogIndex(_DialogUniqueID);\n      this.removeFromBodyDialogWrapperComponent(modalIndex);\n    }\n\n    removeFromBodyDialogWrapperComponent(_DialogIndex) {\n      if (_DialogIndex > -1) {\n        this.dialogParentComponentRefList[_DialogIndex].instance.closeParent$().pipe(tap(item => {\n          this.appRef.detachView(this.dialogParentComponentRefList[_DialogIndex].hostView);\n\n          this.dialogParentComponentRefList[_DialogIndex].destroy();\n\n          this.dialogParentComponentRefList.splice(_DialogIndex, 1);\n        }), take(1)).subscribe();\n      }\n    }\n\n    findDialogIndex(_DialogUniqueID) {\n      return this.dialogParentComponentRefList.findIndex(item => {\n        return _DialogUniqueID === item.instance.dialogBelonging.entityUniqueID;\n      });\n    }\n\n  }\n\n  DialogService.ɵfac = function DialogService_Factory(t) {\n    return new (t || DialogService)(i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i0.ApplicationRef));\n  };\n\n  DialogService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DialogService,\n    factory: DialogService.ɵfac,\n    providedIn: 'root'\n  });\n  return DialogService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass DialogInitializer {\n  constructor(component) {\n    this.component = component;\n    this.dialogCarrier = new DialogCarrier();\n    this.dialogCarrier.setComponent(this.component);\n  }\n\n  openDialog$() {\n    return this.dialogCarrier.openDialog$().pipe(map(resp => {\n      const basicDialogResponse = new DialogResponse();\n      const dataControl = new DataControl();\n      dataControl.copyValuesFrom(resp, basicDialogResponse);\n      return basicDialogResponse;\n    }), take(1));\n  }\n\n  setButtons(_Buttons) {\n    this.dialogCarrier.setButtons(_Buttons);\n  }\n\n  setCustomData(_CustomData) {\n    this.dialogCarrier.setCustomData(_CustomData);\n  }\n\n  setConfig(_DialogConfig) {\n    this.dialogCarrier.setConfig(_DialogConfig);\n  }\n\n}\n\nclass DialogResponse extends DataControl {\n  constructor() {\n    super();\n    this.payload = null;\n    this.success = null;\n    this.clickedButtonID = null;\n  }\n\n  setPayload(_Payload) {\n    this.payload = _Payload;\n  }\n\n  setClickedButtonID(_ClickedButtonID) {\n    this.clickedButtonID = _ClickedButtonID;\n  }\n\n}\n\nclass DialogeventsController {\n  constructor(entityUniqueID) {\n    this.entityUniqueID = entityUniqueID;\n    this._afterClosed = new Subject();\n    this._afterLoader = new Subject();\n    this._onButtonClick = new Subject();\n    this._buttonList = new Subject();\n    this.onButtonClick$ = this._onButtonClick.asObservable();\n    this.afterClosed$ = this._afterClosed.asObservable();\n    this.afterLoader$ = this._afterLoader.asObservable();\n    this.buttonList$ = this._buttonList.asObservable();\n  }\n\n  close(_Payload = null) {\n    this.defaultResponse.setPayload(_Payload);\n\n    this._afterClosed.next(this.defaultResponse);\n  }\n\n  onButtonClick(_Button) {\n    this.defaultResponse.setClickedButtonID(_Button.ID);\n\n    this._onButtonClick.next(_Button);\n  }\n\n  setButtonList(_ButtonList) {\n    this._buttonList.next(_ButtonList);\n  }\n\n  closeLoader() {\n    setTimeout(() => {\n      this._afterLoader.next(this.entityUniqueID);\n    }, 0);\n  }\n\n  setDefaultResponse(_Response) {\n    this.defaultResponse = _Response;\n  }\n\n}\n\nclass DialogDefaultResponse extends DialogResponse {\n  constructor() {\n    super();\n    this.DialogBelonging = null;\n  }\n\n  setBelonging(_DialogBelonging) {\n    this.DialogBelonging = _DialogBelonging;\n  }\n\n}\n\nclass DialogCarrier {\n  constructor() {\n    this.dialogBelonging = new DialogBelonging();\n  }\n\n  setComponent(_Component) {\n    this.component = _Component;\n  }\n\n  setButtons(_Buttons) {\n    if (_Buttons.length) {\n      this.dialogBelonging.buttons = _Buttons;\n    }\n  }\n\n  setCustomData(_CustomData) {\n    this.dialogBelonging.customData = _CustomData;\n  }\n\n  setConfig(_DialogConfig) {\n    const dataControl = new DataControl();\n    dataControl.copyValuesFrom(_DialogConfig, this.dialogBelonging.dialogCoreConfig);\n\n    if (_DialogConfig === null || _DialogConfig === void 0 ? void 0 : _DialogConfig.loaderComponent) {\n      this.dialogBelonging.dialogCoreConfig.displayLoader = true;\n    }\n  }\n\n  openDialog$() {\n    const service = ServiceLocator.injector.get(DialogService);\n    const dialogController = service.open(this.component, this.dialogBelonging);\n    return dialogController.afterClosed$;\n  }\n\n}\n\nclass DialogCustomStyles {\n  constructor() {\n    this.buttonSectionCSS = null;\n    this.buttonCSS = null;\n    this.wrapperCSS = null;\n  }\n\n}\n\nclass dialogCoreConfig extends Sizes {\n  constructor() {\n    super(...arguments);\n    this.escapeKeyClose = null;\n    this.hideScrollbar = null;\n    this.buttonPosition = null;\n    this.layoutType = null;\n    this.displayLoader = null;\n    this.loaderComponent = null;\n    this.animationIn = null;\n    this.animationOut = null;\n    this.customStyles = new DialogCustomStyles();\n  }\n\n}\n\nclass DialogSettings {\n  constructor() {\n    this.buttons = [];\n    this.dialogCoreConfig = new dialogCoreConfig();\n  }\n\n}\n\nclass DialogBelonging extends DialogSettings {\n  constructor() {\n    super();\n    this.entityUniqueID = 'D' + Math.random().toString(36).substr(2, 9);\n    this.customData = null;\n    this.eventsController = new DialogeventsController(this.entityUniqueID);\n    const dialogConfigurator = ServiceLocator.injector.get(DialogConfigService);\n    const baseSettings = new DialogSettings();\n    const dataControl = new DataControl();\n    dataControl.copyValuesFrom(dialogConfigurator.productionConfig.dialogCoreConfig, baseSettings.dialogCoreConfig);\n    this.dialogCoreConfig = baseSettings.dialogCoreConfig;\n    this.buttons = dialogConfigurator.productionConfig.buttons.slice();\n  }\n\n}\n\nvar ToastProgressBarEnum = /*#__PURE__*/(() => {\n  (function (ToastProgressBarEnum) {\n    ToastProgressBarEnum[ToastProgressBarEnum[\"NONE\"] = 0] = \"NONE\";\n    ToastProgressBarEnum[ToastProgressBarEnum[\"INCREASE\"] = 1] = \"INCREASE\";\n    ToastProgressBarEnum[ToastProgressBarEnum[\"DECREASE\"] = 2] = \"DECREASE\";\n  })(ToastProgressBarEnum || (ToastProgressBarEnum = {}));\n\n  return ToastProgressBarEnum;\n})();\nvar ToastPositionEnum = /*#__PURE__*/(() => {\n  (function (ToastPositionEnum) {\n    ToastPositionEnum[\"TOP_LEFT\"] = \"top-left\";\n    ToastPositionEnum[\"TOP_CENTER\"] = \"top-center\";\n    ToastPositionEnum[\"TOP_RIGHT\"] = \"top-right\";\n    ToastPositionEnum[\"TOP_FULL_WIDTH\"] = \"top-fullwidth\";\n    ToastPositionEnum[\"BOTTOM_LEFT\"] = \"bottom-left\";\n    ToastPositionEnum[\"BOTTOM_CENTER\"] = \"bottom-center\";\n    ToastPositionEnum[\"BOTTOM_RIGHT\"] = \"bottom-right\";\n    ToastPositionEnum[\"BOTTOM_FULL_WIDTH\"] = \"bottom-fullwidth\";\n  })(ToastPositionEnum || (ToastPositionEnum = {}));\n\n  return ToastPositionEnum;\n})();\nvar ToastUserViewTypeEnum = /*#__PURE__*/(() => {\n  (function (ToastUserViewTypeEnum) {\n    ToastUserViewTypeEnum[\"SIMPLE\"] = \"simple\";\n    ToastUserViewTypeEnum[\"STANDARD\"] = \"standard\";\n  })(ToastUserViewTypeEnum || (ToastUserViewTypeEnum = {}));\n\n  return ToastUserViewTypeEnum;\n})();\nlet ToastNotificationConfigService = /*#__PURE__*/(() => {\n  class ToastNotificationConfigService {\n    constructor(userConfig = {}) {\n      this.userConfig = userConfig;\n      this.dataControl = new DataControl();\n      this.authorConfig = new ToastSettings();\n      this.productionConfig = new ToastSettings();\n      const userConfigBase = new ToastSettings();\n      this.dataControl.copyValuesFrom(userConfig.toastCoreConfig, userConfigBase.toastCoreConfig);\n      userConfig.toastCoreConfig = userConfigBase.toastCoreConfig;\n      this.authorConfig.toastCoreConfig.buttonPosition = 'right';\n      this.authorConfig.toastCoreConfig.textPosition = 'left';\n      this.authorConfig.toastCoreConfig.toastPosition = ToastPositionEnum.TOP_RIGHT;\n      this.authorConfig.toastCoreConfig.progressBar = ToastProgressBarEnum.INCREASE;\n      this.authorConfig.toastCoreConfig.toastUserViewType = ToastUserViewTypeEnum.SIMPLE;\n      this.authorConfig.toastCoreConfig.autoCloseDelay = 2500;\n      this.authorConfig.toastCoreConfig.disableIcon = false;\n      this.authorConfig.toastCoreConfig.allowHtmlMessage = true;\n      this.authorConfig.toastCoreConfig.layoutType = DialogLayoutDisplay.NONE;\n      this.authorConfig.globalSettings.allowedNotificationsAtOnce = 5;\n      this.authorConfig.toastCoreConfig.animationIn = AppearanceAnimation.ZOOM_IN;\n      this.authorConfig.toastCoreConfig.animationOut = DisappearanceAnimation.ZOOM_OUT;\n      this.authorConfig.toastCoreConfig.customStyles = new ToastCustomStyles();\n      this.authorConfig.toastCoreConfig.iconStyleClass = null;\n      this.setResetGlobalToastConfig();\n      this.dataControl.copyValuesFrom(this.authorConfig.toastCoreConfig, this.productionConfig.toastCoreConfig);\n      this.dataControl.copyValuesFrom(this.userConfig.toastCoreConfig, this.productionConfig.toastCoreConfig);\n    }\n\n    setResetGlobalToastConfig(globalToastConfig) {\n      this.dataControl.copyValuesFrom(this.authorConfig.globalSettings, this.productionConfig.globalSettings);\n      this.dataControl.copyValuesFrom(globalToastConfig ? globalToastConfig : this.userConfig.globalSettings, this.productionConfig.globalSettings);\n    }\n\n  }\n\n  ToastNotificationConfigService.ɵfac = function ToastNotificationConfigService_Factory(t) {\n    return new (t || ToastNotificationConfigService)(i0.ɵɵinject('toastNotificationConfig'));\n  };\n\n  ToastNotificationConfigService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ToastNotificationConfigService,\n    factory: ToastNotificationConfigService.ɵfac,\n    providedIn: 'root'\n  });\n  return ToastNotificationConfigService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet WrapperAbstraction = /*#__PURE__*/(() => {\n  class WrapperAbstraction {\n    constructor(toastNotificationBelonging, layoutHelper) {\n      this.toastNotificationBelonging = toastNotificationBelonging;\n      this.layoutHelper = layoutHelper;\n      this.closeIsClicked = false;\n      this.autoClosingHasStarted = false;\n      this.fadeInOutAnimation = 'open';\n      this.timerStarted$ = new BehaviorSubject('start-counter');\n      this.isTimerStarted = false;\n      this.timer = new Timer();\n      this.appearanceAnimation = AppearanceAnimation;\n      this.disappearanceAnimation = DisappearanceAnimation;\n      setTimeout(() => {\n        this.boxAnimation = this.toastNotificationBelonging.toastCoreConfig.animationIn;\n      }, 1);\n    }\n\n    get autoCloseCondition() {\n      return this.toastNotificationBelonging.toastCoreConfig.autoCloseDelay && !(this.toastNotificationBelonging.buttons.length || this.toastNotificationBelonging.toastCoreConfig.declineLabel || this.toastNotificationBelonging.toastCoreConfig.confirmLabel);\n    }\n\n    get buttonsExist() {\n      return !!this.toastNotificationBelonging.buttons.length || !!this.toastNotificationBelonging.toastCoreConfig.declineLabel || !!this.toastNotificationBelonging.toastCoreConfig.confirmLabel;\n    }\n\n    setCustomStyles() {\n      if (this.toastNotificationBelonging.toastCoreConfig.customStyles.textCSS && this.elTextWrapper) {\n        this.elTextWrapper.nativeElement.style.cssText += this.toastNotificationBelonging.toastCoreConfig.customStyles.textCSS;\n      }\n\n      if (this.toastNotificationBelonging.toastCoreConfig.customStyles.titleCSS && this.elTitleWrapper) {\n        this.elTitleWrapper.nativeElement.style.cssText += this.toastNotificationBelonging.toastCoreConfig.customStyles.titleCSS;\n      }\n\n      if (this.toastNotificationBelonging.toastCoreConfig.customStyles.buttonSectionCSS && this.elButtonWrapper) {\n        this.elButtonWrapper.nativeElement.style.cssText += this.toastNotificationBelonging.toastCoreConfig.customStyles.buttonSectionCSS;\n      }\n\n      if (this.toastNotificationBelonging.toastCoreConfig.customStyles.buttonCSS && this.elButton) {\n        this.elButton.forEach(el => {\n          el.nativeElement.style.cssText += this.toastNotificationBelonging.toastCoreConfig.customStyles.buttonCSS;\n        });\n      }\n    }\n\n    mouseOver() {\n      var _a;\n\n      if (!this.buttonsExist && !this.closeIsClicked && !this.autoClosingHasStarted) {\n        this.timerStarted$.next('stop-counter');\n        this.fadeInOutAnimation = 'open';\n        (_a = this.subsToClosingDelay) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this.boxAnimation = 'reset';\n      }\n    }\n\n    mouseOut() {\n      if (!this.buttonsExist && !this.closeIsClicked && !this.autoClosingHasStarted) {\n        this.timerStarted$.next('start-counter');\n      }\n    }\n\n    onOverlayClicked(evt) {}\n\n    onToastClicked(evt) {}\n\n    setResponse(_IsSuccess, _ClickedButtonID) {\n      const response = new ToastNotificationDefaultResponse();\n\n      if (_ClickedButtonID) {\n        response.clickedButtonID = _ClickedButtonID;\n      }\n\n      response.setSuccess(_IsSuccess);\n      response.setBelonging(this.toastNotificationBelonging);\n      this.toastNotificationBelonging.eventsController.setDefaultResponse(response);\n    }\n\n    onCustomButton(_Button) {\n      this.toastNotificationBelonging.eventsController.onButtonClick(_Button);\n      this.setResponse(true, _Button.ID);\n      this.toastNotificationBelonging.eventsController.close();\n    }\n\n    onButtonClick(_Type) {\n      let buttonID;\n\n      if (_Type === 'confirm') {\n        buttonID = this.toastNotificationBelonging.toastCoreConfig.confirmLabel.toLowerCase();\n      } else if (_Type === 'decline') {\n        buttonID = this.toastNotificationBelonging.toastCoreConfig.declineLabel.toLowerCase();\n      }\n\n      this.setResponse(_Type === 'confirm', buttonID);\n      this.toastNotificationBelonging.eventsController.close();\n    }\n\n    autoClose() {\n      if (this.autoCloseCondition) {\n        this.timer.setMilliseconds(this.toastNotificationBelonging.toastCoreConfig.autoCloseDelay);\n        this.subTimer = this.timerStarted$.pipe(tap(next => {\n          if ('start-counter' === next) {\n            this.timer.start();\n            this.isTimerStarted = true;\n            this.timeout = setTimeout(() => {\n              this.subsToClosingDelay = this.closeParent$().subscribe(resp => {\n                this.toastNotificationBelonging.eventsController.close();\n              });\n            }, this.toastNotificationBelonging.toastCoreConfig.autoCloseDelay);\n          } else if ('stop-counter' === next) {\n            if (this.isTimerStarted) {\n              this.timer.stop();\n              clearTimeout(this.timeout);\n              this.isTimerStarted = false;\n            }\n          }\n        })).subscribe();\n      }\n    }\n\n    closeParent$() {\n      this.autoClosingHasStarted = true;\n      this.boxAnimation = this.toastNotificationBelonging.toastCoreConfig.animationOut;\n      const closeDuration = this.toastNotificationBelonging.toastCoreConfig.animationOut ? 400 : 200;\n      this.fadeInOutAnimation = 'close-fast';\n      return of('').pipe(delay(closeDuration));\n    }\n\n    close() {\n      this.toastNotificationBelonging.eventsController.close();\n    }\n\n    closeIcon() {\n      var _a;\n\n      this.closeIsClicked = true;\n      (_a = this.subsToClosingDelay) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n      this.closeParent$().pipe(take(1)).subscribe(resp => {\n        this.toastNotificationBelonging.eventsController.close();\n      });\n    }\n\n    ngOnDestroy() {\n      var _a, _b;\n\n      (_a = this.subsToClosingDelay) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n      (_b = this.subTimer) === null || _b === void 0 ? void 0 : _b.unsubscribe();\n    }\n\n    getIconClasses() {\n      return 'icon-type-toast ' + this.layoutHelper.getIconClasses(this.toastNotificationBelonging.toastCoreConfig.layoutType, this.toastNotificationBelonging.toastCoreConfig.iconStyleClass);\n    }\n\n  }\n\n  WrapperAbstraction.ɵfac = function WrapperAbstraction_Factory(t) {\n    return new (t || WrapperAbstraction)(i0.ɵɵdirectiveInject('toastNotificationBelonging'), i0.ɵɵdirectiveInject(LayoutHelperService));\n  };\n\n  WrapperAbstraction.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: WrapperAbstraction,\n    viewQuery: function WrapperAbstraction_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elTextWrapper = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elTitleWrapper = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elButtonWrapper = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elButton = _t);\n      }\n    }\n  });\n  return WrapperAbstraction;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ToastNotificationSimpleWrapperComponent = /*#__PURE__*/(() => {\n  class ToastNotificationSimpleWrapperComponent extends WrapperAbstraction {\n    constructor(toastNotificationBelonging, gConfig, cd, layoutHelper) {\n      super(toastNotificationBelonging, layoutHelper);\n      this.toastNotificationBelonging = toastNotificationBelonging;\n      this.gConfig = gConfig;\n      this.cd = cd;\n      this.layoutHelper = layoutHelper;\n    }\n\n    ngAfterViewInit() {\n      this.setResponse(false);\n      this.cd.detectChanges();\n      this.autoClose();\n      this.setCustomStyles();\n    }\n\n  }\n\n  ToastNotificationSimpleWrapperComponent.ɵfac = function ToastNotificationSimpleWrapperComponent_Factory(t) {\n    return new (t || ToastNotificationSimpleWrapperComponent)(i0.ɵɵdirectiveInject('toastNotificationBelonging'), i0.ɵɵdirectiveInject(GlobalConfigService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(LayoutHelperService));\n  };\n\n  ToastNotificationSimpleWrapperComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ToastNotificationSimpleWrapperComponent,\n    selectors: [[\"app-toast-notification-simple-wrapper\"]],\n    features: [i0.ɵɵProvidersFeature([LayoutHelperService]), i0.ɵɵInheritDefinitionFeature],\n    decls: 9,\n    vars: 14,\n    consts: [[1, \"toast-wrapper\", \"simple-toast\", 3, \"dblclick\"], [3, \"className\", \"mouseover\", \"mouseout\", \"click\"], [\"class\", \"toast-title-content\", 4, \"ngIf\"], [\"class\", \"content-holder toast-text\", 4, \"ngIf\"], [1, \"button-holder\"], [\"elButtonWrapper\", \"\"], [\"class\", \"button-section\", 3, \"ngStyle\", 4, \"ngIf\"], [\"class\", \"progress-bar-container\", 4, \"ngIf\"], [1, \"toast-title-content\"], [\"elTitleWrapper\", \"\"], [\"class\", \"icon-section\", 4, \"ngIf\"], [1, \"dont-break-out\"], [1, \"text-wrapper\", \"dont-break-out\"], [\"class\", \"close-ico icon-times-circle\", 3, \"click\", 4, \"ngIf\"], [1, \"icon-section\"], [3, \"className\"], [1, \"close-ico\", \"icon-times-circle\", 3, \"click\"], [1, \"content-holder\", \"toast-text\"], [\"elTextWrapper\", \"\"], [1, \"text-wrapper-section\", \"toast-inner-content\", 3, \"ngStyle\", \"ngClass\"], [\"class\", \"text-wrapper dont-break-out\", 4, \"ngIf\"], [\"class\", \"text-wrapper\", 3, \"innerHTML\", 4, \"ngIf\"], [1, \"text-wrapper\", 3, \"innerHTML\"], [1, \"button-section\", 3, \"ngStyle\"], [3, \"disabled\", \"display\", \"className\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"disabled\", \"className\", \"click\"], [\"elButton\", \"\"], [3, \"className\", \"click\", 4, \"ngIf\"], [\"class\", \"ed-btn ed-btn-sm ed-btn-secondary\", 3, \"click\", 4, \"ngIf\"], [3, \"className\", \"click\"], [1, \"ed-btn\", \"ed-btn-sm\", \"ed-btn-secondary\", 3, \"click\"], [1, \"progress-bar-container\"], [1, \"progress-bar\", 3, \"ngStyle\"]],\n    template: function ToastNotificationSimpleWrapperComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"dblclick\", function ToastNotificationSimpleWrapperComponent_Template_div_dblclick_0_listener($event) {\n          return ctx.onOverlayClicked($event);\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵlistener(\"mouseover\", function ToastNotificationSimpleWrapperComponent_Template_div_mouseover_1_listener() {\n          return ctx.mouseOver();\n        })(\"mouseout\", function ToastNotificationSimpleWrapperComponent_Template_div_mouseout_1_listener() {\n          return ctx.mouseOut();\n        })(\"click\", function ToastNotificationSimpleWrapperComponent_Template_div_click_1_listener($event) {\n          return ctx.onToastClicked($event);\n        });\n        i0.ɵɵtemplate(2, ToastNotificationSimpleWrapperComponent_div_2_Template, 7, 3, \"div\", 2);\n        i0.ɵɵtemplate(3, ToastNotificationSimpleWrapperComponent_div_3_Template, 7, 9, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4, 5);\n        i0.ɵɵtemplate(6, ToastNotificationSimpleWrapperComponent_div_6_Template, 2, 4, \"div\", 6);\n        i0.ɵɵtemplate(7, ToastNotificationSimpleWrapperComponent_div_7_Template, 3, 5, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, ToastNotificationSimpleWrapperComponent_div_8_Template, 2, 3, \"div\", 7);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"@fadeInOut\", i0.ɵɵpureFunction2(11, _c7, ctx.fadeInOutAnimation, i0.ɵɵpureFunction1(9, _c6, ctx.toastNotificationBelonging.toastCoreConfig.animationOut === ctx.disappearanceAnimation.NONE ? \"200ms\" : \"300ms\")));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"@.disabled\", ctx.toastNotificationBelonging.toastCoreConfig.animationIn === ctx.appearanceAnimation.NONE && ctx.toastNotificationBelonging.toastCoreConfig.animationOut === ctx.disappearanceAnimation.NONE)(\"@boxAnimations\", ctx.boxAnimation)(\"className\", ctx.layoutHelper.getBoxClasses(ctx.toastNotificationBelonging.toastCoreConfig.layoutType, \"evolve-toast\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.toastNotificationBelonging.dispatch.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.toastNotificationBelonging.dispatch.message);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.toastNotificationBelonging.buttons.length);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.toastNotificationBelonging.buttons.length && (ctx.toastNotificationBelonging.toastCoreConfig.declineLabel || ctx.toastNotificationBelonging.toastCoreConfig.confirmLabel));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.buttonsExist && ctx.toastNotificationBelonging.toastCoreConfig.progressBar !== 0);\n      }\n    },\n    dependencies: [i2.NgIf, i2.NgStyle, i2.NgClass, i2.NgForOf],\n    encapsulation: 2,\n    data: {\n      animation: [fadeInOut(), boxAnimations()]\n    }\n  });\n  return ToastNotificationSimpleWrapperComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ToastNotificationWrapperComponent = /*#__PURE__*/(() => {\n  class ToastNotificationWrapperComponent extends WrapperAbstraction {\n    constructor(toastNotificationBelonging, gConfig, cd, layoutHelper) {\n      super(toastNotificationBelonging, layoutHelper);\n      this.toastNotificationBelonging = toastNotificationBelonging;\n      this.gConfig = gConfig;\n      this.cd = cd;\n      this.layoutHelper = layoutHelper;\n    }\n\n    ngAfterViewInit() {\n      this.setResponse(false);\n      this.cd.detectChanges();\n      this.autoClose();\n      this.setCustomStyles();\n    }\n\n  }\n\n  ToastNotificationWrapperComponent.ɵfac = function ToastNotificationWrapperComponent_Factory(t) {\n    return new (t || ToastNotificationWrapperComponent)(i0.ɵɵdirectiveInject('toastNotificationBelonging'), i0.ɵɵdirectiveInject(GlobalConfigService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(LayoutHelperService));\n  };\n\n  ToastNotificationWrapperComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ToastNotificationWrapperComponent,\n    selectors: [[\"app-toast-notification-wrapper\"]],\n    features: [i0.ɵɵProvidersFeature([LayoutHelperService]), i0.ɵɵInheritDefinitionFeature],\n    decls: 9,\n    vars: 14,\n    consts: [[1, \"toast-wrapper\", \"standard-toast\", 3, \"dblclick\"], [3, \"className\", \"mouseover\", \"mouseout\", \"click\"], [\"class\", \"toast-title-content\", 4, \"ngIf\"], [\"class\", \"content-holder toast-text\", 4, \"ngIf\"], [1, \"button-holder\"], [\"elButtonWrapper\", \"\"], [\"class\", \"button-section\", 3, \"ngStyle\", 4, \"ngIf\"], [\"class\", \"progress-bar-container\", 4, \"ngIf\"], [1, \"toast-title-content\"], [\"elTitleWrapper\", \"\"], [1, \"dont-break-out\"], [1, \"text-wrapper\", \"dont-break-out\"], [\"class\", \"close-ico icon-times-circle\", 3, \"click\", 4, \"ngIf\"], [1, \"close-ico\", \"icon-times-circle\", 3, \"click\"], [1, \"content-holder\", \"toast-text\"], [\"elTextWrapper\", \"\"], [\"class\", \"icon-section\", 4, \"ngIf\"], [1, \"text-wrapper-section\", \"toast-inner-content\", 3, \"ngStyle\", \"ngClass\"], [\"class\", \"text-wrapper dont-break-out\", 4, \"ngIf\"], [\"class\", \"text-wrapper\", 3, \"innerHTML\", 4, \"ngIf\"], [1, \"icon-section\"], [3, \"className\"], [1, \"text-wrapper\", 3, \"innerHTML\"], [1, \"button-section\", 3, \"ngStyle\"], [3, \"disabled\", \"display\", \"className\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"disabled\", \"className\", \"click\"], [\"elButton\", \"\"], [3, \"className\", \"click\", 4, \"ngIf\"], [\"class\", \"ed-btn ed-btn-sm ed-btn-secondary\", 3, \"click\", 4, \"ngIf\"], [3, \"className\", \"click\"], [1, \"ed-btn\", \"ed-btn-sm\", \"ed-btn-secondary\", 3, \"click\"], [1, \"progress-bar-container\"], [1, \"progress-bar\", 3, \"ngStyle\"]],\n    template: function ToastNotificationWrapperComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"dblclick\", function ToastNotificationWrapperComponent_Template_div_dblclick_0_listener($event) {\n          return ctx.onOverlayClicked($event);\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵlistener(\"mouseover\", function ToastNotificationWrapperComponent_Template_div_mouseover_1_listener() {\n          return ctx.mouseOver();\n        })(\"mouseout\", function ToastNotificationWrapperComponent_Template_div_mouseout_1_listener() {\n          return ctx.mouseOut();\n        })(\"click\", function ToastNotificationWrapperComponent_Template_div_click_1_listener($event) {\n          return ctx.onToastClicked($event);\n        });\n        i0.ɵɵtemplate(2, ToastNotificationWrapperComponent_div_2_Template, 6, 2, \"div\", 2);\n        i0.ɵɵtemplate(3, ToastNotificationWrapperComponent_div_3_Template, 8, 10, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4, 5);\n        i0.ɵɵtemplate(6, ToastNotificationWrapperComponent_div_6_Template, 2, 4, \"div\", 6);\n        i0.ɵɵtemplate(7, ToastNotificationWrapperComponent_div_7_Template, 3, 5, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, ToastNotificationWrapperComponent_div_8_Template, 2, 3, \"div\", 7);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"@fadeInOut\", i0.ɵɵpureFunction2(11, _c7, ctx.fadeInOutAnimation, i0.ɵɵpureFunction1(9, _c6, ctx.toastNotificationBelonging.toastCoreConfig.animationOut === ctx.disappearanceAnimation.NONE ? \"200ms\" : \"300ms\")));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"@.disabled\", ctx.toastNotificationBelonging.toastCoreConfig.animationIn === ctx.appearanceAnimation.NONE && ctx.toastNotificationBelonging.toastCoreConfig.animationOut === ctx.disappearanceAnimation.NONE)(\"@boxAnimations\", ctx.boxAnimation)(\"className\", ctx.layoutHelper.getBoxClasses(ctx.toastNotificationBelonging.toastCoreConfig.layoutType, \"evolve-toast\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.toastNotificationBelonging.dispatch.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.toastNotificationBelonging.dispatch.message);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.toastNotificationBelonging.buttons.length);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.toastNotificationBelonging.buttons.length && (ctx.toastNotificationBelonging.toastCoreConfig.declineLabel || ctx.toastNotificationBelonging.toastCoreConfig.confirmLabel));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.buttonsExist && ctx.toastNotificationBelonging.toastCoreConfig.progressBar !== 0);\n      }\n    },\n    dependencies: [i2.NgIf, i2.NgStyle, i2.NgClass, i2.NgForOf],\n    encapsulation: 2,\n    data: {\n      animation: [fadeInOut(), boxAnimations()]\n    }\n  });\n  return ToastNotificationWrapperComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ToastNotificationService = /*#__PURE__*/(() => {\n  class ToastNotificationService {\n    constructor(componentFactoryResolver, injector, appRef, toastConfig, gConfigService) {\n      this.componentFactoryResolver = componentFactoryResolver;\n      this.injector = injector;\n      this.appRef = appRef;\n      this.toastConfig = toastConfig;\n      this.gConfigService = gConfigService;\n      this.toastComponentRefList = [];\n      this.bufferToastRawList = [];\n      this.bufferCheckingIntervalIsReady = true;\n    }\n\n    openToast$(_ToastNotificationBelonging) {\n      const eventController = _ToastNotificationBelonging.eventsController;\n      const toastRawInstance = this.prepareRawToast(eventController, _ToastNotificationBelonging);\n      this.listeners(eventController);\n      this.internalRouting(toastRawInstance);\n      return eventController.afterClosed$;\n    }\n\n    internalRouting(_ToastRawInstance) {\n      if (this.isRefListAvailable()) {\n        this.sendToProduction(_ToastRawInstance);\n        return true;\n      } else {\n        this.sendToBuffer(_ToastRawInstance);\n        return false;\n      }\n    }\n\n    sendToBuffer(_ToastRawInstance) {\n      this.bufferToastRawList.push(_ToastRawInstance);\n    }\n\n    sendToProduction(_ToastRawInstance) {\n      const componentRef = this.getComponentRef(_ToastRawInstance);\n\n      if (componentRef) {\n        this.toastComponentRefList.push(componentRef);\n        componentRef.instance.toastNotificationBelonging = _ToastRawInstance.toastBelonging;\n        this.appendToBodyParentComponent(componentRef);\n      }\n    }\n\n    isRefListAvailable() {\n      return this.toastComponentRefList.length < this.toastConfig.productionConfig.globalSettings.allowedNotificationsAtOnce;\n    }\n\n    prepareRawToast(_eventsController, _ToastNotificationBelonging) {\n      const weakMap = new WeakMap();\n      weakMap.set(ToastNotificationeventsController, _eventsController);\n      return {\n        weakMap: weakMap,\n        toastBelonging: _ToastNotificationBelonging\n      };\n    }\n\n    getComponentRef(_ToastNotificationRawState) {\n      const dialogIndex = this.findDialogIndex(_ToastNotificationRawState.toastBelonging.entityUniqueID);\n\n      if (dialogIndex === -1) {\n        let toastUserViewComponent = ToastNotificationWrapperComponent;\n\n        if (_ToastNotificationRawState.toastBelonging.toastCoreConfig.toastUserViewType === ToastUserViewTypeEnum.SIMPLE) {\n          toastUserViewComponent = ToastNotificationSimpleWrapperComponent;\n        }\n\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(toastUserViewComponent);\n        return componentFactory.create(new DialogInjector(this.injector, _ToastNotificationRawState.weakMap));\n      }\n\n      return null;\n    }\n\n    listeners(_eventsController) {\n      const closeDialogSubscription = _eventsController.afterClosed$.subscribe(response => {\n        this.removeFromBody(response.toastNotificationBelonging.entityUniqueID);\n        closeDialogSubscription.unsubscribe();\n      });\n    }\n\n    appendToBodyParentComponent(_ComponentRef) {\n      this.appRef.attachView(_ComponentRef.hostView);\n      const toastPosition = _ComponentRef.instance.toastNotificationBelonging.toastCoreConfig.toastPosition;\n      const openInElementID = _ComponentRef.instance.toastNotificationBelonging.toastCoreConfig.openInElementID;\n      let targetNode;\n\n      if (!openInElementID) {\n        this.setToastWrapperNode(_ComponentRef.instance.toastNotificationBelonging.toastCoreConfig.toastPosition, this.setToastOverlayNode());\n        targetNode = document.getElementById(`toast-wrapper-${toastPosition}`);\n      } else {\n        targetNode = document.getElementById(openInElementID);\n      }\n\n      const domElem = _ComponentRef.hostView.rootNodes[0];\n      const toastEntity = document.createElement('div');\n      toastEntity.setAttribute('id', _ComponentRef.instance.toastNotificationBelonging.entityUniqueID);\n      toastEntity.className = 'toast-entity';\n      const split = toastPosition.split('-');\n\n      if (split[1] === 'fullwidth') {\n        toastEntity.style.width = '93vw';\n      } else if (openInElementID) {\n        toastEntity.style.width = '100%';\n      } else {\n        toastEntity.style.width = '300px';\n      }\n\n      toastEntity.style.margin = 'auto';\n      toastEntity.prepend(domElem);\n      targetNode.prepend(toastEntity);\n    }\n\n    removeFromBody(_entityUniqueID) {\n      const modalIndex = this.findDialogIndex(_entityUniqueID);\n\n      if (modalIndex > -1) {\n        if (this.bufferToastRawList.length) {\n          this.sendToProduction(this.bufferToastRawList[0]);\n          this.bufferToastRawList.splice(0, 1);\n        }\n\n        this.toastComponentRefList[modalIndex].instance.closeParent$().pipe(tap(item => {\n          const modalIndex = this.findDialogIndex(_entityUniqueID);\n\n          if (this.toastComponentRefList[modalIndex]) {\n            const toastEntity = document.getElementById(this.toastComponentRefList[modalIndex].instance.toastNotificationBelonging.entityUniqueID);\n            toastEntity.remove();\n            this.appRef.detachView(this.toastComponentRefList[modalIndex].hostView);\n            this.toastComponentRefList[modalIndex].destroy();\n            this.toastComponentRefList.splice(modalIndex, 1);\n          }\n        }), take(1)).subscribe();\n      }\n    }\n\n    findDialogIndex(_DialogUniqueID) {\n      return this.toastComponentRefList.findIndex(item => {\n        return _DialogUniqueID === item.instance.toastNotificationBelonging.entityUniqueID;\n      });\n    }\n\n    setToastOverlayNode() {\n      const bodyNode = document.body || document.getElementsByTagName('body')[0];\n\n      if (!bodyNode) {\n        return;\n      }\n\n      const toastOverlayNode = document.getElementById('toast-overlay-container');\n\n      if (!toastOverlayNode) {\n        const toastOverlayNode = document.createElement('div');\n        toastOverlayNode.setAttribute('id', 'toast-overlay-container');\n        toastOverlayNode.appendChild(document.createTextNode(''));\n        toastOverlayNode.style.position = 'fixed';\n        toastOverlayNode.style.top = '0';\n        toastOverlayNode.style.left = '0';\n        toastOverlayNode.style.zIndex = '999999999999';\n        bodyNode.appendChild(toastOverlayNode);\n        return toastOverlayNode;\n      }\n\n      return toastOverlayNode;\n    }\n\n    setToastWrapperNode(_Position, _ToastOverlayNode) {\n      const toastWrapperNode = document.getElementById(`toast-wrapper-${_Position}`);\n\n      if (!toastWrapperNode) {\n        const toastWrapper = document.createElement('div');\n        toastWrapper.setAttribute('id', 'toast-wrapper-' + _Position);\n        toastWrapper.appendChild(document.createTextNode(''));\n\n        _ToastOverlayNode.prepend(toastWrapper);\n\n        const split = _Position.split('-');\n\n        if (split[1] === 'right' || split[1] === 'left') {\n          this.gConfigService.getSheet('ngx-awesome-popup-styles').addRule(`#toast-wrapper-${_Position}`, `${split[0]}: 20px; ${split[1]}: 20px; position: fixed; z-index: 999999999;`);\n        }\n\n        if (split[1] === 'center') {\n          this.gConfigService.getSheet('ngx-awesome-popup-styles').addRule(`#toast-wrapper-${_Position}`, `${split[0]}: 20px; width: 100%; position: fixed; z-index: 999999999; pointer-events: none;`);\n        }\n\n        if (split[1] === 'fullwidth') {\n          this.gConfigService.getSheet('ngx-awesome-popup-styles').addRule(`#toast-wrapper-${_Position}`, `${split[0]}: 10px; width: 100%; position: fixed; z-index: 999999999; pointer-events: none;`);\n        }\n      }\n    }\n\n  }\n\n  ToastNotificationService.ɵfac = function ToastNotificationService_Factory(t) {\n    return new (t || ToastNotificationService)(i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(ToastNotificationConfigService), i0.ɵɵinject(GlobalConfigService));\n  };\n\n  ToastNotificationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ToastNotificationService,\n    factory: ToastNotificationService.ɵfac,\n    providedIn: 'root'\n  });\n  return ToastNotificationService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass ToastNotificationInitializer {\n  constructor() {\n    this.toastNotificationCarrier = new ToastNotificationCarrier();\n  }\n\n  openToastNotification$() {\n    return this.toastNotificationCarrier.openToastNotification$().pipe(map(resp => {\n      const basicToastNotificationResponse = new ToastNotificationResponse();\n      const dataControl = new DataControl();\n      dataControl.copyValuesFrom(resp, basicToastNotificationResponse);\n      return basicToastNotificationResponse;\n    }), take(1));\n  }\n\n  setButtons(_Buttons) {\n    this.toastNotificationCarrier.setButtons(_Buttons);\n  }\n\n  setConfig(_ToastNotificationConfig) {\n    this.toastNotificationCarrier.setConfig(_ToastNotificationConfig);\n  }\n\n  setDispatch(_Title, _Message = null) {\n    this.toastNotificationCarrier.setTitle(_Title);\n    this.toastNotificationCarrier.setMessage(_Message);\n  }\n\n  setTitle(_Title) {\n    this.toastNotificationCarrier.setTitle(_Title);\n  }\n\n  setMessage(_Message) {\n    this.toastNotificationCarrier.setMessage(_Message);\n  }\n\n  setButtonLabels(_Confirm, _Decline) {\n    this.toastNotificationCarrier.setButtonLabels(_Confirm, _Decline);\n  }\n\n}\n\nclass ToastNotificationResponse extends DataControl {\n  constructor() {\n    super();\n    this.success = null;\n    this.clickedButtonID = null;\n  }\n\n  setSuccess(_IsSuccess) {\n    this.success = _IsSuccess;\n  }\n\n  setClickedButtonID(_ClickedButtonID) {\n    this.clickedButtonID = _ClickedButtonID;\n  }\n\n}\n\nclass ToastNotificationeventsController {\n  constructor(entityUniqueID) {\n    this.entityUniqueID = entityUniqueID;\n    this._onButtonClick = new Subject();\n    this._afterClosed = new Subject();\n    this._buttonList = new Subject();\n    this.afterClosed$ = this._afterClosed.asObservable();\n    this.onButtonClick$ = this._onButtonClick.asObservable();\n    this.buttonList$ = this._buttonList.asObservable();\n  }\n\n  close(_Response) {\n    const response = _Response ? _Response : this.defaultResponse;\n\n    this._afterClosed.next(response);\n  }\n\n  onButtonClick(_Button) {\n    this.defaultResponse.setClickedButtonID(_Button.ID);\n\n    this._onButtonClick.next(_Button);\n  }\n\n  setButtonList(_ButtonList) {\n    this._buttonList.next(_ButtonList);\n  }\n\n  setDefaultResponse(_Response) {\n    this.defaultResponse = _Response;\n  }\n\n}\n\nclass ToastNotificationDefaultResponse extends ToastNotificationResponse {\n  constructor() {\n    super();\n    this.toastNotificationBelonging = null;\n  }\n\n  setBelonging(_ToastNotificationBelonging) {\n    this.toastNotificationBelonging = _ToastNotificationBelonging;\n  }\n\n}\n\nclass ToastNotificationCarrier {\n  constructor() {\n    this.toastNotificationBelonging = new ToastNotificationBelonging();\n  }\n\n  setButtons(_Buttons) {\n    if (_Buttons.length) {\n      this.toastNotificationBelonging.buttons = _Buttons;\n    }\n  }\n\n  setTitle(_Title) {\n    this.toastNotificationBelonging.dispatch.title = _Title;\n  }\n\n  setMessage(_Message) {\n    this.toastNotificationBelonging.dispatch.message = _Message;\n  }\n\n  setButtonLabels(_Confirm, _Decline) {\n    this.toastNotificationBelonging.toastCoreConfig.confirmLabel = _Confirm;\n    this.toastNotificationBelonging.toastCoreConfig.declineLabel = _Decline;\n  }\n\n  setConfig(_ToastNotificationBelonging) {\n    const dataControl = new DataControl();\n    dataControl.copyValuesFrom(_ToastNotificationBelonging, this.toastNotificationBelonging.toastCoreConfig);\n  }\n\n  openToastNotification$() {\n    if (!this.toastNotificationBelonging.dispatch.title && !this.toastNotificationBelonging.dispatch.message) {\n      throw Error('Toast notification can not be without both message and title.');\n    }\n\n    const service = ServiceLocator.injector.get(ToastNotificationService);\n    return service.openToast$(this.toastNotificationBelonging);\n  }\n\n}\n\nclass GlobalToastSettings {\n  constructor() {\n    this.allowedNotificationsAtOnce = null;\n  }\n\n}\n\nclass ResetToastGlobalSettings {\n  constructor(globalToastConfig) {\n    const globalToastConfigService = ServiceLocator.injector.get(ToastNotificationConfigService);\n\n    if (globalToastConfigService) {\n      globalToastConfigService.setResetGlobalToastConfig(globalToastConfig);\n    } else {\n      globalToastConfigService.setResetGlobalToastConfig();\n    }\n  }\n\n}\n\nclass ToastSettings {\n  constructor() {\n    this.buttons = [];\n    this.toastCoreConfig = new toastCoreConfig();\n    this.dispatch = new dispatch();\n    this.globalSettings = new GlobalToastSettings();\n  }\n\n}\n\nclass ToastCustomStyles {\n  constructor() {\n    this.titleCSS = null;\n    this.textCSS = null;\n    this.buttonSectionCSS = null;\n    this.buttonCSS = null;\n  }\n\n}\n\nclass toastCoreConfig {\n  constructor() {\n    this.toastPosition = null;\n    this.progressBar = null;\n    this.toastUserViewType = null;\n    this.openInElementID = null;\n    this.buttonPosition = null;\n    this.textPosition = null;\n    this.layoutType = null;\n    this.dispatch = null;\n    this.confirmLabel = null;\n    this.declineLabel = null;\n    this.autoCloseDelay = null;\n    this.disableIcon = null;\n    this.allowHtmlMessage = null;\n    this.animationIn = null;\n    this.animationOut = null;\n    this.customStyles = new ToastCustomStyles();\n    this.iconStyleClass = null;\n  }\n\n}\n\nclass ToastNotificationBelonging extends ToastSettings {\n  constructor() {\n    super();\n    this.entityUniqueID = 'T' + Math.random().toString(36).substr(2, 9);\n    this.eventsController = new ToastNotificationeventsController(this.entityUniqueID);\n    const toastNotificationConfigurator = ServiceLocator.injector.get(ToastNotificationConfigService);\n    const baseSettings = new ToastSettings();\n    const dataControl = new DataControl();\n    dataControl.copyValuesFrom(toastNotificationConfigurator.productionConfig.toastCoreConfig, baseSettings.toastCoreConfig);\n    this.toastCoreConfig = baseSettings.toastCoreConfig;\n    this.buttons = toastNotificationConfigurator.productionConfig.buttons.slice();\n  }\n\n}\n\nlet NgxAwesomePopupModule = /*#__PURE__*/(() => {\n  class NgxAwesomePopupModule {\n    constructor(injector) {\n      this.injector = injector;\n      ServiceLocator.injector = injector;\n    }\n\n    static forRoot(globalConfig) {\n      return {\n        ngModule: NgxAwesomePopupModule,\n        providers: [{\n          provide: 'cdGlobalConfig',\n          useValue: globalConfig\n        }]\n      };\n    }\n\n  }\n\n  NgxAwesomePopupModule.ɵfac = function NgxAwesomePopupModule_Factory(t) {\n    return new (t || NgxAwesomePopupModule)(i0.ɵɵinject(i0.Injector));\n  };\n\n  NgxAwesomePopupModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgxAwesomePopupModule\n  });\n  NgxAwesomePopupModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [GlobalConfigService],\n    imports: [[CommonModule, BrowserModule, BrowserAnimationsModule]]\n  });\n  return NgxAwesomePopupModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DialogConfigModule = /*#__PURE__*/(() => {\n  class DialogConfigModule {\n    static forRoot(dialogConfig) {\n      return {\n        ngModule: DialogConfigModule,\n        providers: [{\n          provide: 'dialogConfig',\n          useValue: dialogConfig\n        }, {\n          provide: 'dialogBelonging',\n          useClass: DialogBelonging\n        }]\n      };\n    }\n\n  }\n\n  DialogConfigModule.ɵfac = function DialogConfigModule_Factory(t) {\n    return new (t || DialogConfigModule)();\n  };\n\n  DialogConfigModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DialogConfigModule\n  });\n  DialogConfigModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DialogService, DialogConfigService],\n    imports: [[CommonModule]]\n  });\n  return DialogConfigModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ConfirmBoxConfigModule = /*#__PURE__*/(() => {\n  class ConfirmBoxConfigModule {\n    static forRoot(confirmBoxConfig) {\n      return {\n        ngModule: ConfirmBoxConfigModule,\n        providers: [{\n          provide: 'confirmBoxConfig',\n          useValue: confirmBoxConfig\n        }, {\n          provide: 'confirmBoxBelonging',\n          useClass: ConfirmBoxBelonging\n        }]\n      };\n    }\n\n  }\n\n  ConfirmBoxConfigModule.ɵfac = function ConfirmBoxConfigModule_Factory(t) {\n    return new (t || ConfirmBoxConfigModule)();\n  };\n\n  ConfirmBoxConfigModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ConfirmBoxConfigModule\n  });\n  ConfirmBoxConfigModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [ConfirmBoxService, ConfirmBoxConfigService],\n    imports: [[CommonModule]]\n  });\n  return ConfirmBoxConfigModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ToastNotificationConfigModule = /*#__PURE__*/(() => {\n  class ToastNotificationConfigModule {\n    static forRoot(toastNotificationConfig) {\n      return {\n        ngModule: ToastNotificationConfigModule,\n        providers: [{\n          provide: 'toastNotificationConfig',\n          useValue: toastNotificationConfig\n        }, {\n          provide: 'toastNotificationBelonging',\n          useClass: ToastNotificationBelonging\n        }]\n      };\n    }\n\n  }\n\n  ToastNotificationConfigModule.ɵfac = function ToastNotificationConfigModule_Factory(t) {\n    return new (t || ToastNotificationConfigModule)();\n  };\n\n  ToastNotificationConfigModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ToastNotificationConfigModule\n  });\n  ToastNotificationConfigModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [ToastNotificationService, ToastNotificationConfigService],\n    imports: [[CommonModule]]\n  });\n  return ToastNotificationConfigModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar _ConfirmBoxEvokeService_instances, _ConfirmBoxEvokeService_extender;\n\nclass ConfirmBoxEvokeService {\n  constructor() {\n    _ConfirmBoxEvokeService_instances.add(this);\n  }\n\n  success(title, message, confirmLabel, declineLabel) {\n    const confirmBox = __classPrivateFieldGet(this, _ConfirmBoxEvokeService_instances, \"m\", _ConfirmBoxEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    confirmBox.setConfig({\n      layoutType: DialogLayoutDisplay.SUCCESS\n    });\n    return confirmBox.openConfirmBox$();\n  }\n\n  info(title, message, confirmLabel, declineLabel) {\n    const confirmBox = __classPrivateFieldGet(this, _ConfirmBoxEvokeService_instances, \"m\", _ConfirmBoxEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    confirmBox.setConfig({\n      layoutType: DialogLayoutDisplay.INFO\n    });\n    return confirmBox.openConfirmBox$();\n  }\n\n  warning(title, message, confirmLabel, declineLabel) {\n    const confirmBox = __classPrivateFieldGet(this, _ConfirmBoxEvokeService_instances, \"m\", _ConfirmBoxEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    confirmBox.setConfig({\n      layoutType: DialogLayoutDisplay.WARNING\n    });\n    return confirmBox.openConfirmBox$();\n  }\n\n  danger(title, message, confirmLabel, declineLabel) {\n    const confirmBox = __classPrivateFieldGet(this, _ConfirmBoxEvokeService_instances, \"m\", _ConfirmBoxEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    confirmBox.setConfig({\n      layoutType: DialogLayoutDisplay.DANGER\n    });\n    return confirmBox.openConfirmBox$();\n  }\n\n  customOne(title, message, confirmLabel, declineLabel) {\n    const confirmBox = __classPrivateFieldGet(this, _ConfirmBoxEvokeService_instances, \"m\", _ConfirmBoxEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    confirmBox.setConfig({\n      layoutType: DialogLayoutDisplay.CUSTOM_ONE\n    });\n    return confirmBox.openConfirmBox$();\n  }\n\n  customTwo(title, message, confirmLabel, declineLabel) {\n    const confirmBox = __classPrivateFieldGet(this, _ConfirmBoxEvokeService_instances, \"m\", _ConfirmBoxEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    confirmBox.setConfig({\n      layoutType: DialogLayoutDisplay.CUSTOM_TWO\n    });\n    return confirmBox.openConfirmBox$();\n  }\n\n  customThree(title, message, confirmLabel, declineLabel) {\n    const confirmBox = __classPrivateFieldGet(this, _ConfirmBoxEvokeService_instances, \"m\", _ConfirmBoxEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    confirmBox.setConfig({\n      layoutType: DialogLayoutDisplay.CUSTOM_THREE\n    });\n    return confirmBox.openConfirmBox$();\n  }\n\n  customFour(title, message, confirmLabel, declineLabel) {\n    const confirmBox = __classPrivateFieldGet(this, _ConfirmBoxEvokeService_instances, \"m\", _ConfirmBoxEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    confirmBox.setConfig({\n      layoutType: DialogLayoutDisplay.CUSTOM_FOUR\n    });\n    return confirmBox.openConfirmBox$();\n  }\n\n  customFive(title, message, confirmLabel, declineLabel) {\n    const confirmBox = __classPrivateFieldGet(this, _ConfirmBoxEvokeService_instances, \"m\", _ConfirmBoxEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    confirmBox.setConfig({\n      layoutType: DialogLayoutDisplay.CUSTOM_FIVE\n    });\n    return confirmBox.openConfirmBox$();\n  }\n\n}\n\n_ConfirmBoxEvokeService_instances = new WeakSet(), _ConfirmBoxEvokeService_extender = function _ConfirmBoxEvokeService_extender(title, message, confirmLabel, declineLabel) {\n  const confirmBox = new ConfirmBoxInitializer();\n  confirmBox.setTitle(title);\n  confirmBox.setMessage(message);\n  confirmBox.setButtonLabels(confirmLabel, declineLabel);\n  return confirmBox;\n};\n\nConfirmBoxEvokeService.ɵfac = function ConfirmBoxEvokeService_Factory(t) {\n  return new (t || ConfirmBoxEvokeService)();\n};\n\nConfirmBoxEvokeService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ConfirmBoxEvokeService,\n  factory: ConfirmBoxEvokeService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar _ToastEvokeService_instances, _ToastEvokeService_extender;\n\nclass ToastEvokeService {\n  constructor() {\n    _ToastEvokeService_instances.add(this);\n  }\n\n  success(title, message, confirmLabel, declineLabel) {\n    const toast = __classPrivateFieldGet(this, _ToastEvokeService_instances, \"m\", _ToastEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    toast.setConfig({\n      layoutType: DialogLayoutDisplay.SUCCESS\n    });\n    return toast.openToastNotification$();\n  }\n\n  info(title, message, confirmLabel, declineLabel) {\n    const toast = __classPrivateFieldGet(this, _ToastEvokeService_instances, \"m\", _ToastEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    toast.setConfig({\n      layoutType: DialogLayoutDisplay.INFO\n    });\n    return toast.openToastNotification$();\n  }\n\n  warning(title, message, confirmLabel, declineLabel) {\n    const toast = __classPrivateFieldGet(this, _ToastEvokeService_instances, \"m\", _ToastEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    toast.setConfig({\n      layoutType: DialogLayoutDisplay.WARNING\n    });\n    return toast.openToastNotification$();\n  }\n\n  danger(title, message, confirmLabel, declineLabel) {\n    const toast = __classPrivateFieldGet(this, _ToastEvokeService_instances, \"m\", _ToastEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    toast.setConfig({\n      layoutType: DialogLayoutDisplay.DANGER\n    });\n    return toast.openToastNotification$();\n  }\n\n  customOne(title, message, confirmLabel, declineLabel) {\n    const toast = __classPrivateFieldGet(this, _ToastEvokeService_instances, \"m\", _ToastEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    toast.setConfig({\n      layoutType: DialogLayoutDisplay.CUSTOM_ONE\n    });\n    return toast.openToastNotification$();\n  }\n\n  customTwo(title, message, confirmLabel, declineLabel) {\n    const toast = __classPrivateFieldGet(this, _ToastEvokeService_instances, \"m\", _ToastEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    toast.setConfig({\n      layoutType: DialogLayoutDisplay.CUSTOM_TWO\n    });\n    return toast.openToastNotification$();\n  }\n\n  customThree(title, message, confirmLabel, declineLabel) {\n    const toast = __classPrivateFieldGet(this, _ToastEvokeService_instances, \"m\", _ToastEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    toast.setConfig({\n      layoutType: DialogLayoutDisplay.CUSTOM_THREE\n    });\n    return toast.openToastNotification$();\n  }\n\n  customFour(title, message, confirmLabel, declineLabel) {\n    const toast = __classPrivateFieldGet(this, _ToastEvokeService_instances, \"m\", _ToastEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    toast.setConfig({\n      layoutType: DialogLayoutDisplay.CUSTOM_FOUR\n    });\n    return toast.openToastNotification$();\n  }\n\n  customFive(title, message, confirmLabel, declineLabel) {\n    const toast = __classPrivateFieldGet(this, _ToastEvokeService_instances, \"m\", _ToastEvokeService_extender).call(this, title, message, confirmLabel, declineLabel);\n\n    toast.setConfig({\n      layoutType: DialogLayoutDisplay.CUSTOM_FIVE\n    });\n    return toast.openToastNotification$();\n  }\n\n}\n\n_ToastEvokeService_instances = new WeakSet(), _ToastEvokeService_extender = function _ToastEvokeService_extender(title, message, confirmLabel, declineLabel) {\n  const toast = new ToastNotificationInitializer();\n  toast.setTitle(title);\n  toast.setMessage(message);\n  toast.setButtonLabels(confirmLabel, declineLabel);\n  return toast;\n};\n\nToastEvokeService.ɵfac = function ToastEvokeService_Factory(t) {\n  return new (t || ToastEvokeService)();\n};\n\nToastEvokeService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ToastEvokeService,\n  factory: ToastEvokeService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nexport { AppearanceAnimation, ButtonLayoutDisplay, ButtonMaker, ConfirmBoxConfigModule, ConfirmBoxEvokeService, ConfirmBoxInitializer, DialogBelonging, DialogConfigModule, DialogInitializer, DialogLayoutDisplay, DisappearanceAnimation, NgxAwesomePopupModule, ResetGlobalConfig, ResetToastGlobalSettings, ToastEvokeService, ToastNotificationConfigModule, ToastNotificationInitializer, ToastPositionEnum, ToastProgressBarEnum, ToastUserViewTypeEnum }; //# sourceMappingURL=costlydeveloper-ngx-awesome-popup.mjs.map","map":null,"metadata":{},"sourceType":"module"}